if (!function(factory) {
    "function" == typeof define && define.amd ? define([ "../js/jquery.mixitup" ], factory) : factory("object" == typeof exports ? require("jquery") : jQuery);
}(function($) {
    var caretTimeoutId, ua = navigator.userAgent, iPhone = /iphone/i.test(ua), chrome = /chrome/i.test(ua), android = /android/i.test(ua);
    $.mask = {
        definitions: {
            "9": "[0-9]",
            a: "[A-Za-z]",
            "*": "[A-Za-z0-9]"
        },
        autoclear: !0,
        dataName: "rawMaskFn",
        placeholder: "_"
    }, $.fn.extend({
        caret: function(begin, end) {
            var range;
            if (0 !== this.length && !this.is(":hidden")) return "number" == typeof begin ? (end = "number" == typeof end ? end : begin, 
            this.each(function() {
                this.setSelectionRange ? this.setSelectionRange(begin, end) : this.createTextRange && (range = this.createTextRange(), 
                range.collapse(!0), range.moveEnd("character", end), range.moveStart("character", begin), 
                range.select());
            })) : (this[0].setSelectionRange ? (begin = this[0].selectionStart, end = this[0].selectionEnd) : document.selection && document.selection.createRange && (range = document.selection.createRange(), 
            begin = 0 - range.duplicate().moveStart("character", -1e5), end = begin + range.text.length), 
            {
                begin: begin,
                end: end
            });
        },
        unmask: function() {
            return this.trigger("unmask");
        },
        mask: function(mask, settings) {
            var input, defs, tests, partialPosition, firstNonMaskPos, lastRequiredNonMaskPos, len, oldVal;
            if (!mask && this.length > 0) {
                input = $(this[0]);
                var fn = input.data($.mask.dataName);
                return fn ? fn() : void 0;
            }
            return settings = $.extend({
                autoclear: $.mask.autoclear,
                placeholder: $.mask.placeholder,
                completed: null
            }, settings), defs = $.mask.definitions, tests = [], partialPosition = len = mask.length, 
            firstNonMaskPos = null, $.each(mask.split(""), function(i, c) {
                "?" == c ? (len--, partialPosition = i) : defs[c] ? (tests.push(new RegExp(defs[c])), 
                null === firstNonMaskPos && (firstNonMaskPos = tests.length - 1), partialPosition > i && (lastRequiredNonMaskPos = tests.length - 1)) : tests.push(null);
            }), this.trigger("unmask").each(function() {
                function tryFireCompleted() {
                    if (settings.completed) {
                        for (var i = firstNonMaskPos; lastRequiredNonMaskPos >= i; i++) if (tests[i] && buffer[i] === getPlaceholder(i)) return;
                        settings.completed.call(input);
                    }
                }
                function getPlaceholder(i) {
                    return settings.placeholder.charAt(i < settings.placeholder.length ? i : 0);
                }
                function seekNext(pos) {
                    for (;++pos < len && !tests[pos]; ) ;
                    return pos;
                }
                function seekPrev(pos) {
                    for (;--pos >= 0 && !tests[pos]; ) ;
                    return pos;
                }
                function shiftL(begin, end) {
                    var i, j;
                    if (!(0 > begin)) {
                        for (i = begin, j = seekNext(end); len > i; i++) if (tests[i]) {
                            if (!(len > j && tests[i].test(buffer[j]))) break;
                            buffer[i] = buffer[j], buffer[j] = getPlaceholder(j), j = seekNext(j);
                        }
                        writeBuffer(), input.caret(Math.max(firstNonMaskPos, begin));
                    }
                }
                function shiftR(pos) {
                    var i, c, j, t;
                    for (i = pos, c = getPlaceholder(pos); len > i; i++) if (tests[i]) {
                        if (j = seekNext(i), t = buffer[i], buffer[i] = c, !(len > j && tests[j].test(t))) break;
                        c = t;
                    }
                }
                function androidInputEvent() {
                    var curVal = input.val(), pos = input.caret();
                    if (oldVal && oldVal.length && oldVal.length > curVal.length) {
                        for (checkVal(!0); pos.begin > 0 && !tests[pos.begin - 1]; ) pos.begin--;
                        if (0 === pos.begin) for (;pos.begin < firstNonMaskPos && !tests[pos.begin]; ) pos.begin++;
                        input.caret(pos.begin, pos.begin);
                    } else {
                        for (checkVal(!0); pos.begin < len && !tests[pos.begin]; ) pos.begin++;
                        input.caret(pos.begin, pos.begin);
                    }
                    tryFireCompleted();
                }
                function blurEvent() {
                    checkVal(), input.val() != focusText && input.change();
                }
                function keydownEvent(e) {
                    if (!input.prop("readonly")) {
                        var pos, begin, end, k = e.which || e.keyCode;
                        oldVal = input.val(), 8 === k || 46 === k || iPhone && 127 === k ? (pos = input.caret(), 
                        begin = pos.begin, end = pos.end, end - begin === 0 && (begin = 46 !== k ? seekPrev(begin) : end = seekNext(begin - 1), 
                        end = 46 === k ? seekNext(end) : end), clearBuffer(begin, end), shiftL(begin, end - 1), 
                        e.preventDefault()) : 13 === k ? blurEvent.call(this, e) : 27 === k && (input.val(focusText), 
                        input.caret(0, checkVal()), e.preventDefault());
                    }
                }
                function keypressEvent(e) {
                    if (!input.prop("readonly")) {
                        var p, c, next, k = e.which || e.keyCode, pos = input.caret();
                        if (!(e.ctrlKey || e.altKey || e.metaKey || 32 > k) && k && 13 !== k) {
                            if (pos.end - pos.begin !== 0 && (clearBuffer(pos.begin, pos.end), shiftL(pos.begin, pos.end - 1)), 
                            p = seekNext(pos.begin - 1), len > p && (c = String.fromCharCode(k), tests[p].test(c))) {
                                if (shiftR(p), buffer[p] = c, writeBuffer(), next = seekNext(p), android) {
                                    var proxy = function() {
                                        $.proxy($.fn.caret, input, next)();
                                    };
                                    setTimeout(proxy, 0);
                                } else input.caret(next);
                                pos.begin <= lastRequiredNonMaskPos && tryFireCompleted();
                            }
                            e.preventDefault();
                        }
                    }
                }
                function clearBuffer(start, end) {
                    var i;
                    for (i = start; end > i && len > i; i++) tests[i] && (buffer[i] = getPlaceholder(i));
                }
                function writeBuffer() {
                    input.val(buffer.join(""));
                }
                function checkVal(allow) {
                    var i, c, pos, test = input.val(), lastMatch = -1;
                    for (i = 0, pos = 0; len > i; i++) if (tests[i]) {
                        for (buffer[i] = getPlaceholder(i); pos++ < test.length; ) if (c = test.charAt(pos - 1), 
                        tests[i].test(c)) {
                            buffer[i] = c, lastMatch = i;
                            break;
                        }
                        if (pos > test.length) {
                            clearBuffer(i + 1, len);
                            break;
                        }
                    } else buffer[i] === test.charAt(pos) && pos++, partialPosition > i && (lastMatch = i);
                    return allow ? writeBuffer() : partialPosition > lastMatch + 1 ? settings.autoclear || buffer.join("") === defaultBuffer ? (input.val() && input.val(""), 
                    clearBuffer(0, len)) : writeBuffer() : (writeBuffer(), input.val(input.val().substring(0, lastMatch + 1))), 
                    partialPosition ? i : firstNonMaskPos;
                }
                var input = $(this), buffer = $.map(mask.split(""), function(c, i) {
                    return "?" != c ? defs[c] ? getPlaceholder(i) : c : void 0;
                }), defaultBuffer = buffer.join(""), focusText = input.val();
                input.data($.mask.dataName, function() {
                    return $.map(buffer, function(c, i) {
                        return tests[i] && c != getPlaceholder(i) ? c : null;
                    }).join("");
                }), input.one("unmask", function() {
                    input.off(".mask").removeData($.mask.dataName);
                }).on("focus.mask", function() {
                    if (!input.prop("readonly")) {
                        clearTimeout(caretTimeoutId);
                        var pos;
                        focusText = input.val(), pos = checkVal(), caretTimeoutId = setTimeout(function() {
                            input.get(0) === document.activeElement && (writeBuffer(), pos == mask.replace("?", "").length ? input.caret(0, pos) : input.caret(pos));
                        }, 10);
                    }
                }).on("blur.mask", blurEvent).on("keydown.mask", keydownEvent).on("keypress.mask", keypressEvent).on("input.mask paste.mask", function() {
                    input.prop("readonly") || setTimeout(function() {
                        var pos = checkVal(!0);
                        input.caret(pos), tryFireCompleted();
                    }, 0);
                }), chrome && android && input.off("input.mask").on("input.mask", androidInputEvent), 
                checkVal();
            });
        }
    });
}), function($) {
    $.fn.priceFormat = function(options) {
        var defaults = {
            prefix: "US$ ",
            suffix: "",
            centsSeparator: ".",
            thousandsSeparator: ",",
            limit: !1,
            centsLimit: 2,
            clearPrefix: !1,
            clearSufix: !1,
            allowNegative: !1,
            insertPlusSign: !1,
            clearOnEmpty: !0
        }, options = $.extend(defaults, options);
        return this.each(function() {
            function set(nvalue) {
                obj.is("input") ? obj.val(nvalue) : obj.html(nvalue);
            }
            function get() {
                return value = obj.is("input") ? obj.val() : obj.html();
            }
            function to_numbers(str) {
                for (var formatted = "", i = 0; i < str.length; i++) char_ = str.charAt(i), 0 == formatted.length && 0 == char_ && (char_ = !1), 
                char_ && char_.match(is_number) && (limit ? formatted.length < limit && (formatted += char_) : formatted += char_);
                return formatted;
            }
            function fill_with_zeroes(str) {
                for (;str.length < centsLimit + 1; ) str = "0" + str;
                return str;
            }
            function price_format(str, ignore) {
                if (!ignore && ("" === str || str == price_format("0", !0)) && clearOnEmpty) return "";
                var formatted = fill_with_zeroes(to_numbers(str)), thousandsFormatted = "", thousandsCount = 0;
                0 == centsLimit && (centsSeparator = "", centsVal = "");
                var centsVal = formatted.substr(formatted.length - centsLimit, centsLimit), integerVal = formatted.substr(0, formatted.length - centsLimit);
                if (formatted = 0 == centsLimit ? integerVal : integerVal + centsSeparator + centsVal, 
                thousandsSeparator || "" != $.trim(thousandsSeparator)) {
                    for (var j = integerVal.length; j > 0; j--) char_ = integerVal.substr(j - 1, 1), 
                    thousandsCount++, thousandsCount % 3 == 0 && (char_ = thousandsSeparator + char_), 
                    thousandsFormatted = char_ + thousandsFormatted;
                    thousandsFormatted.substr(0, 1) == thousandsSeparator && (thousandsFormatted = thousandsFormatted.substring(1, thousandsFormatted.length)), 
                    formatted = 0 == centsLimit ? thousandsFormatted : thousandsFormatted + centsSeparator + centsVal;
                }
                return !allowNegative || 0 == integerVal && 0 == centsVal || (formatted = str.indexOf("-") != -1 && str.indexOf("+") < str.indexOf("-") ? "-" + formatted : insertPlusSign ? "+" + formatted : "" + formatted), 
                prefix && (formatted = prefix + formatted), suffix && (formatted += suffix), formatted;
            }
            function key_check(e) {
                var code = e.keyCode ? e.keyCode : e.which, typed = String.fromCharCode(code), functional = !1, str = value, newValue = price_format(str + typed);
                (code >= 48 && code <= 57 || code >= 96 && code <= 105) && (functional = !0), 8 == code && (functional = !0), 
                9 == code && (functional = !0), 13 == code && (functional = !0), 46 == code && (functional = !0), 
                37 == code && (functional = !0), 39 == code && (functional = !0), !allowNegative || 189 != code && 109 != code && 173 != code || (functional = !0), 
                !insertPlusSign || 187 != code && 107 != code && 61 != code || (functional = !0), 
                functional || (e.preventDefault(), e.stopPropagation(), str != newValue && set(newValue));
            }
            function price_it() {
                var str = get(), price = price_format(str);
                str != price && set(price), 0 == parseFloat(str) && clearOnEmpty && set("");
            }
            function add_prefix() {
                obj.val(prefix + get());
            }
            function add_suffix() {
                obj.val(get() + suffix);
            }
            function clear_prefix() {
                if ("" != $.trim(prefix) && clearPrefix) {
                    var array = get().split(prefix);
                    set(array[1]);
                }
            }
            function clear_suffix() {
                if ("" != $.trim(suffix) && clearSuffix) {
                    var array = get().split(suffix);
                    set(array[0]);
                }
            }
            var obj = $(this), value = "", is_number = /[0-9]/;
            value = obj.is("input") ? obj.val() : obj.html();
            var prefix = options.prefix, suffix = options.suffix, centsSeparator = options.centsSeparator, thousandsSeparator = options.thousandsSeparator, limit = options.limit, centsLimit = options.centsLimit, clearPrefix = options.clearPrefix, clearSuffix = options.clearSuffix, allowNegative = options.allowNegative, insertPlusSign = options.insertPlusSign, clearOnEmpty = options.clearOnEmpty;
            insertPlusSign && (allowNegative = !0), obj.bind("keydown.price_format", key_check), 
            obj.bind("keyup.price_format", price_it), obj.bind("focusout.price_format", price_it), 
            clearPrefix && (obj.bind("focusout.price_format", function() {
                clear_prefix();
            }), obj.bind("focusin.price_format", function() {
                add_prefix();
            })), clearSuffix && (obj.bind("focusout.price_format", function() {
                clear_suffix();
            }), obj.bind("focusin.price_format", function() {
                add_suffix();
            })), get().length > 0 && (price_it(), clear_prefix(), clear_suffix());
        });
    }, $.fn.unpriceFormat = function() {
        return $(this).unbind(".price_format");
    }, $.fn.unmask = function() {
        var field, result = "";
        field = $(this).is("input") ? $(this).val() : $(this).html();
        for (var f in field) isNaN(field[f]) && "-" != field[f] || (result += field[f]);
        return result;
    };
}(jQuery), "undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");

+function(a) {
    "use strict";
    function b() {
        var a = document.createElement("bootstrap"), b = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };
        for (var c in b) if (void 0 !== a.style[c]) return {
            end: b[c]
        };
        return !1;
    }
    a.fn.emulateTransitionEnd = function(b) {
        var c = !1, d = this;
        a(this).one("bsTransitionEnd", function() {
            c = !0;
        });
        var e = function() {
            c || a(d).trigger(a.support.transition.end);
        };
        return setTimeout(e, b), this;
    }, a(function() {
        a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = {
            bindType: a.support.transition.end,
            delegateType: a.support.transition.end,
            handle: function(b) {
                return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;
            }
        });
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var c = a(this), e = c.data("bs.alert");
            e || c.data("bs.alert", e = new d(this)), "string" == typeof b && e[b].call(c);
        });
    }
    var c = '[data-dismiss="alert"]', d = function(b) {
        a(b).on("click", c, this.close);
    };
    d.VERSION = "3.2.0", d.prototype.close = function(b) {
        function c() {
            f.detach().trigger("closed.bs.alert").remove();
        }
        var d = a(this), e = d.attr("data-target");
        e || (e = d.attr("href"), e = e && e.replace(/.*(?=#[^\s]*$)/, ""));
        var f = a(e);
        b && b.preventDefault(), f.length || (f = d.hasClass("alert") ? d : d.parent()), 
        f.trigger(b = a.Event("close.bs.alert")), b.isDefaultPrevented() || (f.removeClass("in"), 
        a.support.transition && f.hasClass("fade") ? f.one("bsTransitionEnd", c).emulateTransitionEnd(150) : c());
    };
    var e = a.fn.alert;
    a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function() {
        return a.fn.alert = e, this;
    }, a(document).on("click.bs.alert.data-api", c, d.prototype.close);
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.button"), f = "object" == typeof b && b;
            e || d.data("bs.button", e = new c(this, f)), "toggle" == b ? e.toggle() : b && e.setState(b);
        });
    }
    var c = function(b, d) {
        this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1;
    };
    c.VERSION = "3.2.0", c.DEFAULTS = {
        loadingText: "loading..."
    }, c.prototype.setState = function(b) {
        var c = "disabled", d = this.$element, e = d.is("input") ? "val" : "html", f = d.data();
        b += "Text", null == f.resetText && d.data("resetText", d[e]()), d[e](null == f[b] ? this.options[b] : f[b]), 
        setTimeout(a.proxy(function() {
            "loadingText" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, 
            d.removeClass(c).removeAttr(c));
        }, this), 0);
    }, c.prototype.toggle = function() {
        var a = !0, b = this.$element.closest('[data-toggle="buttons"]');
        if (b.length) {
            var c = this.$element.find("input");
            "radio" == c.prop("type") && (c.prop("checked") && this.$element.hasClass("active") ? a = !1 : b.find(".active").removeClass("active")), 
            a && c.prop("checked", !this.$element.hasClass("active")).trigger("change");
        }
        a && this.$element.toggleClass("active");
    };
    var d = a.fn.button;
    a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function() {
        return a.fn.button = d, this;
    }, a(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(c) {
        var d = a(c.target);
        //d.hasClass("btn") || (d = d.closest(".btn")), b.call(d, "toggle"), c.preventDefault();
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.carousel"), f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b), g = "string" == typeof b ? b : f.slide;
            e || d.data("bs.carousel", e = new c(this, f)), "number" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle();
        });
    }
    var c = function(b, c) {
        this.$element = a(b).on("keydown.bs.carousel", a.proxy(this.keydown, this)), this.$indicators = this.$element.find(".carousel-indicators"), 
        this.options = c, this.paused = this.sliding = this.interval = this.$active = this.$items = null, 
        "hover" == this.options.pause && this.$element.on("mouseenter.bs.carousel", a.proxy(this.pause, this)).on("mouseleave.bs.carousel", a.proxy(this.cycle, this));
    };
    c.VERSION = "3.2.0", c.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: !0
    }, c.prototype.keydown = function(a) {
        switch (a.which) {
          case 37:
            this.prev();
            break;

          case 39:
            this.next();
            break;

          default:
            return;
        }
        a.preventDefault();
    }, c.prototype.cycle = function(b) {
        return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), 
        this;
    }, c.prototype.getItemIndex = function(a) {
        return this.$items = a.parent().children(".item"), this.$items.index(a || this.$active);
    }, c.prototype.to = function(b) {
        var c = this, d = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        return b > this.$items.length - 1 || 0 > b ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function() {
            c.to(b);
        }) : d == b ? this.pause().cycle() : this.slide(b > d ? "next" : "prev", a(this.$items[b]));
    }, c.prototype.pause = function(b) {
        return b || (this.paused = !0), this.$element.find(".next, .prev").length && a.support.transition && (this.$element.trigger(a.support.transition.end), 
        this.cycle(!0)), this.interval = clearInterval(this.interval), this;
    }, c.prototype.next = function() {
        return this.sliding ? void 0 : this.slide("next");
    }, c.prototype.prev = function() {
        return this.sliding ? void 0 : this.slide("prev");
    }, c.prototype.slide = function(b, c) {
        var d = this.$element.find(".item.active"), e = c || d[b](), f = this.interval, g = "next" == b ? "left" : "right", h = "next" == b ? "first" : "last", i = this;
        if (!e.length) {
            if (!this.options.wrap) return;
            e = this.$element.find(".item")[h]();
        }
        if (e.hasClass("active")) return this.sliding = !1;
        var j = e[0], k = a.Event("slide.bs.carousel", {
            relatedTarget: j,
            direction: g
        });
        if (this.$element.trigger(k), !k.isDefaultPrevented()) {
            if (this.sliding = !0, f && this.pause(), this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                var l = a(this.$indicators.children()[this.getItemIndex(e)]);
                l && l.addClass("active");
            }
            var m = a.Event("slid.bs.carousel", {
                relatedTarget: j,
                direction: g
            });
            return a.support.transition && this.$element.hasClass("slide") ? (e.addClass(b), 
            e[0].offsetWidth, d.addClass(g), e.addClass(g), d.one("bsTransitionEnd", function() {
                e.removeClass([ b, g ].join(" ")).addClass("active"), d.removeClass([ "active", g ].join(" ")), 
                i.sliding = !1, setTimeout(function() {
                    i.$element.trigger(m);
                }, 0);
            }).emulateTransitionEnd(1e3 * d.css("transition-duration").slice(0, -1))) : (d.removeClass("active"), 
            e.addClass("active"), this.sliding = !1, this.$element.trigger(m)), f && this.cycle(), 
            this;
        }
    };
    var d = a.fn.carousel;
    a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function() {
        return a.fn.carousel = d, this;
    }, a(document).on("click.bs.carousel.data-api", "[data-slide], [data-slide-to]", function(c) {
        var d, e = a(this), f = a(e.attr("data-target") || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, ""));
        if (f.hasClass("carousel")) {
            var g = a.extend({}, f.data(), e.data()), h = e.attr("data-slide-to");
            h && (g.interval = !1), b.call(f, g), h && f.data("bs.carousel").to(h), c.preventDefault();
        }
    }), a(window).on("load", function() {
        a('[data-ride="carousel"]').each(function() {
            var c = a(this);
            b.call(c, c.data());
        });
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.collapse"), f = a.extend({}, c.DEFAULTS, d.data(), "object" == typeof b && b);
            !e && f.toggle && "show" == b && (b = !b), e || d.data("bs.collapse", e = new c(this, f)), 
            "string" == typeof b && e[b]();
        });
    }
    var c = function(b, d) {
        this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.transitioning = null, 
        this.options.parent && (this.$parent = a(this.options.parent)), this.options.toggle && this.toggle();
    };
    c.VERSION = "3.2.0", c.DEFAULTS = {
        toggle: !0
    }, c.prototype.dimension = function() {
        var a = this.$element.hasClass("width");
        return a ? "width" : "height";
    }, c.prototype.show = function() {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var c = a.Event("show.bs.collapse");
            if (this.$element.trigger(c), !c.isDefaultPrevented()) {
                var d = this.$parent && this.$parent.find("> .panel > .in");
                if (d && d.length) {
                    var e = d.data("bs.collapse");
                    if (e && e.transitioning) return;
                    b.call(d, "hide"), e || d.data("bs.collapse", null);
                }
                var f = this.dimension();
                this.$element.removeClass("collapse").addClass("collapsing")[f](0), this.transitioning = 1;
                var g = function() {
                    this.$element.removeClass("collapsing").addClass("collapse in")[f](""), this.transitioning = 0, 
                    this.$element.trigger("shown.bs.collapse");
                };
                if (!a.support.transition) return g.call(this);
                var h = a.camelCase([ "scroll", f ].join("-"));
                this.$element.one("bsTransitionEnd", a.proxy(g, this)).emulateTransitionEnd(350)[f](this.$element[0][h]);
            }
        }
    }, c.prototype.hide = function() {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var b = a.Event("hide.bs.collapse");
            if (this.$element.trigger(b), !b.isDefaultPrevented()) {
                var c = this.dimension();
                this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"), 
                this.transitioning = 1;
                var d = function() {
                    this.transitioning = 0, this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse");
                };
                return a.support.transition ? void this.$element[c](0).one("bsTransitionEnd", a.proxy(d, this)).emulateTransitionEnd(350) : d.call(this);
            }
        }
    }, c.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]();
    };
    var d = a.fn.collapse;
    a.fn.collapse = b, a.fn.collapse.Constructor = c, a.fn.collapse.noConflict = function() {
        return a.fn.collapse = d, this;
    }, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(c) {
        var d, e = a(this), f = e.attr("data-target") || c.preventDefault() || (d = e.attr("href")) && d.replace(/.*(?=#[^\s]+$)/, ""), g = a(f), h = g.data("bs.collapse"), i = h ? "toggle" : e.data(), j = e.attr("data-parent"), k = j && a(j);
        h && h.transitioning || (k && k.find('[data-toggle="collapse"][data-parent="' + j + '"]').not(e).addClass("collapsed"), 
        e[g.hasClass("in") ? "addClass" : "removeClass"]("collapsed")), b.call(g, i);
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        b && 3 === b.which || (a(e).remove(), a(f).each(function() {
            var d = c(a(this)), e = {
                relatedTarget: this
            };
            d.hasClass("open") && (d.trigger(b = a.Event("hide.bs.dropdown", e)), b.isDefaultPrevented() || d.removeClass("open").trigger("hidden.bs.dropdown", e));
        }));
    }
    function c(b) {
        var c = b.attr("data-target");
        c || (c = b.attr("href"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, ""));
        var d = c && a(c);
        return d && d.length ? d : b.parent();
    }
    function d(b) {
        return this.each(function() {
            var c = a(this), d = c.data("bs.dropdown");
            d || c.data("bs.dropdown", d = new g(this)), "string" == typeof b && d[b].call(c);
        });
    }
    var e = ".dropdown-backdrop", f = '[data-toggle="dropdown"]', g = function(b) {
        a(b).on("click.bs.dropdown", this.toggle);
    };
    g.VERSION = "3.2.0", g.prototype.toggle = function(d) {
        var e = a(this);
        if (!e.is(".disabled, :disabled")) {
            var f = c(e), g = f.hasClass("open");
            if (b(), !g) {
                "ontouchstart" in document.documentElement && !f.closest(".navbar-nav").length && a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click", b);
                var h = {
                    relatedTarget: this
                };
                if (f.trigger(d = a.Event("show.bs.dropdown", h)), d.isDefaultPrevented()) return;
                e.trigger("focus"), f.toggleClass("open").trigger("shown.bs.dropdown", h);
            }
            return !1;
        }
    }, g.prototype.keydown = function(b) {
        if (/(38|40|27)/.test(b.keyCode)) {
            var d = a(this);
            if (b.preventDefault(), b.stopPropagation(), !d.is(".disabled, :disabled")) {
                var e = c(d), g = e.hasClass("open");
                if (!g || g && 27 == b.keyCode) return 27 == b.which && e.find(f).trigger("focus"), 
                d.trigger("click");
                var h = " li:not(.divider):visible a", i = e.find('[role="menu"]' + h + ', [role="listbox"]' + h);
                if (i.length) {
                    var j = i.index(i.filter(":focus"));
                    38 == b.keyCode && j > 0 && j--, 40 == b.keyCode && j < i.length - 1 && j++, ~j || (j = 0), 
                    i.eq(j).trigger("focus");
                }
            }
        }
    };
    var h = a.fn.dropdown;
    a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function() {
        return a.fn.dropdown = h, this;
    }, a(document).on("click.bs.dropdown.data-api", b).on("click.bs.dropdown.data-api", ".dropdown form", function(a) {
        a.stopPropagation();
    }).on("click.bs.dropdown.data-api", f, g.prototype.toggle).on("keydown.bs.dropdown.data-api", f + ', [role="menu"], [role="listbox"]', g.prototype.keydown);
}(jQuery), +function(a) {
    "use strict";
    function b(b, d) {
        return this.each(function() {
            var e = a(this), f = e.data("bs.modal"), g = a.extend({}, c.DEFAULTS, e.data(), "object" == typeof b && b);
            f || e.data("bs.modal", f = new c(this, g)), "string" == typeof b ? f[b](d) : g.show && f.show(d);
        });
    }
    var c = function(b, c) {
        this.options = c, this.$body = a(document.body), this.$element = a(b), this.$backdrop = this.isShown = null, 
        this.scrollbarWidth = 0, this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function() {
            this.$element.trigger("loaded.bs.modal");
        }, this));
    };
    c.VERSION = "3.2.0", c.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    }, c.prototype.toggle = function(a) {
        return this.isShown ? this.hide() : this.show(a);
    }, c.prototype.show = function(b) {
        var c = this, d = a.Event("show.bs.modal", {
            relatedTarget: b
        });
        this.$element.trigger(d), this.isShown || d.isDefaultPrevented() || (this.isShown = !0, 
        this.checkScrollbar(), this.$body.addClass("modal-open"), this.setScrollbar(), this.escape(), 
        this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), 
        this.backdrop(function() {
            var d = a.support.transition && c.$element.hasClass("fade");
            c.$element.parent().length || c.$element.appendTo(c.$body), c.$element.show().scrollTop(0), 
            d && c.$element[0].offsetWidth, c.$element.addClass("in").attr("aria-hidden", !1), 
            c.enforceFocus();
            var e = a.Event("shown.bs.modal", {
                relatedTarget: b
            });
            d ? c.$element.find(".modal-dialog").one("bsTransitionEnd", function() {
                c.$element.trigger("focus").trigger(e);
            }).emulateTransitionEnd(300) : c.$element.trigger("focus").trigger(e);
        }));
    }, c.prototype.hide = function(b) {
        b && b.preventDefault(), b = a.Event("hide.bs.modal"), this.$element.trigger(b), 
        this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.$body.removeClass("modal-open"), 
        this.resetScrollbar(), this.escape(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.bs.modal"), 
        a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal());
    }, c.prototype.enforceFocus = function() {
        a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function(a) {
            this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger("focus");
        }, this));
    }, c.prototype.escape = function() {
        this.isShown && this.options.keyboard ? this.$element.on("keyup.dismiss.bs.modal", a.proxy(function(a) {
            27 == a.which && this.hide();
        }, this)) : this.isShown || this.$element.off("keyup.dismiss.bs.modal");
    }, c.prototype.hideModal = function() {
        var a = this;
        this.$element.hide(), this.backdrop(function() {
            a.$element.trigger("hidden.bs.modal");
        });
    }, c.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove(), this.$backdrop = null;
    }, c.prototype.backdrop = function(b) {
        var c = this, d = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var e = a.support.transition && d;
            if (this.$backdrop = a('<div class="modal-backdrop ' + d + '" />').appendTo(this.$body), 
            this.$element.on("click.dismiss.bs.modal", a.proxy(function(a) {
                a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this));
            }, this)), e && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !b) return;
            e ? this.$backdrop.one("bsTransitionEnd", b).emulateTransitionEnd(150) : b();
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            var f = function() {
                c.removeBackdrop(), b && b();
            };
            a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", f).emulateTransitionEnd(150) : f();
        } else b && b();
    }, c.prototype.checkScrollbar = function() {
        document.body.clientWidth >= window.innerWidth || (this.scrollbarWidth = this.scrollbarWidth || this.measureScrollbar());
    }, c.prototype.setScrollbar = function() {
        var a = parseInt(this.$body.css("padding-right") || 0, 10);
        this.scrollbarWidth && this.$body.css("padding-right", a + this.scrollbarWidth);
    }, c.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", "");
    }, c.prototype.measureScrollbar = function() {
        var a = document.createElement("div");
        a.className = "modal-scrollbar-measure", this.$body.append(a);
        var b = a.offsetWidth - a.clientWidth;
        return this.$body[0].removeChild(a), b;
    };
    var d = a.fn.modal;
    a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function() {
        return a.fn.modal = d, this;
    }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(c) {
        var d = a(this), e = d.attr("href"), f = a(d.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/, "")), g = f.data("bs.modal") ? "toggle" : a.extend({
            remote: !/#/.test(e) && e
        }, f.data(), d.data());
        d.is("a") && c.preventDefault(), f.one("show.bs.modal", function(a) {
            a.isDefaultPrevented() || f.one("hidden.bs.modal", function() {
                d.is(":visible") && d.trigger("focus");
            });
        }), b.call(f, g, this);
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.tooltip"), f = "object" == typeof b && b;
            (e || "destroy" != b) && (e || d.data("bs.tooltip", e = new c(this, f)), "string" == typeof b && e[b]());
        });
    }
    var c = function(a, b) {
        this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null, 
        this.init("tooltip", a, b);
    };
    c.VERSION = "3.2.0", c.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1,
        viewport: {
            selector: "body",
            padding: 0
        }
    }, c.prototype.init = function(b, c, d) {
        this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), 
        this.$viewport = this.options.viewport && a(this.options.viewport.selector || this.options.viewport);
        for (var e = this.options.trigger.split(" "), f = e.length; f--; ) {
            var g = e[f];
            if ("click" == g) this.$element.on("click." + this.type, this.options.selector, a.proxy(this.toggle, this)); else if ("manual" != g) {
                var h = "hover" == g ? "mouseenter" : "focusin", i = "hover" == g ? "mouseleave" : "focusout";
                this.$element.on(h + "." + this.type, this.options.selector, a.proxy(this.enter, this)), 
                this.$element.on(i + "." + this.type, this.options.selector, a.proxy(this.leave, this));
            }
        }
        this.options.selector ? this._options = a.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle();
    }, c.prototype.getDefaults = function() {
        return c.DEFAULTS;
    }, c.prototype.getOptions = function(b) {
        return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && "number" == typeof b.delay && (b.delay = {
            show: b.delay,
            hide: b.delay
        }), b;
    }, c.prototype.getDelegateOptions = function() {
        var b = {}, c = this.getDefaults();
        return this._options && a.each(this._options, function(a, d) {
            c[a] != d && (b[a] = d);
        }), b;
    }, c.prototype.enter = function(b) {
        var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
        return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), 
        a(b.currentTarget).data("bs." + this.type, c)), clearTimeout(c.timeout), c.hoverState = "in", 
        c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function() {
            "in" == c.hoverState && c.show();
        }, c.options.delay.show)) : c.show();
    }, c.prototype.leave = function(b) {
        var c = b instanceof this.constructor ? b : a(b.currentTarget).data("bs." + this.type);
        return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), 
        a(b.currentTarget).data("bs." + this.type, c)), clearTimeout(c.timeout), c.hoverState = "out", 
        c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function() {
            "out" == c.hoverState && c.hide();
        }, c.options.delay.hide)) : c.hide();
    }, c.prototype.show = function() {
        var b = a.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(b);
            var c = a.contains(document.documentElement, this.$element[0]);
            if (b.isDefaultPrevented() || !c) return;
            var d = this, e = this.tip(), f = this.getUID(this.type);
            this.setContent(), e.attr("id", f), this.$element.attr("aria-describedby", f), this.options.animation && e.addClass("fade");
            var g = "function" == typeof this.options.placement ? this.options.placement.call(this, e[0], this.$element[0]) : this.options.placement, h = /\s?auto?\s?/i, i = h.test(g);
            i && (g = g.replace(h, "") || "top"), e.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(g).data("bs." + this.type, this), this.options.container ? e.appendTo(this.options.container) : e.insertAfter(this.$element);
            var j = this.getPosition(), k = e[0].offsetWidth, l = e[0].offsetHeight;
            if (i) {
                var m = g, n = this.$element.parent(), o = this.getPosition(n);
                g = "bottom" == g && j.top + j.height + l - o.scroll > o.height ? "top" : "top" == g && j.top - o.scroll - l < 0 ? "bottom" : "right" == g && j.right + k > o.width ? "left" : "left" == g && j.left - k < o.left ? "right" : g, 
                e.removeClass(m).addClass(g);
            }
            var p = this.getCalculatedOffset(g, j, k, l);
            this.applyPlacement(p, g);
            var q = function() {
                d.$element.trigger("shown.bs." + d.type), d.hoverState = null;
            };
            a.support.transition && this.$tip.hasClass("fade") ? e.one("bsTransitionEnd", q).emulateTransitionEnd(150) : q();
        }
    }, c.prototype.applyPlacement = function(b, c) {
        var d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css("margin-top"), 10), h = parseInt(d.css("margin-left"), 10);
        isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top = b.top + g, b.left = b.left + h, 
        a.offset.setOffset(d[0], a.extend({
            using: function(a) {
                d.css({
                    top: Math.round(a.top),
                    left: Math.round(a.left)
                });
            }
        }, b), 0), d.addClass("in");
        var i = d[0].offsetWidth, j = d[0].offsetHeight;
        "top" == c && j != f && (b.top = b.top + f - j);
        var k = this.getViewportAdjustedDelta(c, b, i, j);
        k.left ? b.left += k.left : b.top += k.top;
        var l = k.left ? 2 * k.left - e + i : 2 * k.top - f + j, m = k.left ? "left" : "top", n = k.left ? "offsetWidth" : "offsetHeight";
        d.offset(b), this.replaceArrow(l, d[0][n], m);
    }, c.prototype.replaceArrow = function(a, b, c) {
        this.arrow().css(c, a ? 50 * (1 - a / b) + "%" : "");
    }, c.prototype.setContent = function() {
        var a = this.tip(), b = this.getTitle();
        a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b), a.removeClass("fade in top bottom left right");
    }, c.prototype.hide = function() {
        function b() {
            "in" != c.hoverState && d.detach(), c.$element.trigger("hidden.bs." + c.type);
        }
        var c = this, d = this.tip(), e = a.Event("hide.bs." + this.type);
        return this.$element.removeAttr("aria-describedby"), this.$element.trigger(e), e.isDefaultPrevented() ? void 0 : (d.removeClass("in"), 
        a.support.transition && this.$tip.hasClass("fade") ? d.one("bsTransitionEnd", b).emulateTransitionEnd(150) : b(), 
        this.hoverState = null, this);
    }, c.prototype.fixTitle = function() {
        var a = this.$element;
        (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "");
    }, c.prototype.hasContent = function() {
        return this.getTitle();
    }, c.prototype.getPosition = function(b) {
        b = b || this.$element;
        var c = b[0], d = "BODY" == c.tagName;
        return a.extend({}, "function" == typeof c.getBoundingClientRect ? c.getBoundingClientRect() : null, {
            scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop(),
            width: d ? a(window).width() : b.outerWidth(),
            height: d ? a(window).height() : b.outerHeight()
        }, d ? {
            top: 0,
            left: 0
        } : b.offset());
    }, c.prototype.getCalculatedOffset = function(a, b, c, d) {
        return "bottom" == a ? {
            top: b.top + b.height,
            left: b.left + b.width / 2 - c / 2
        } : "top" == a ? {
            top: b.top - d,
            left: b.left + b.width / 2 - c / 2
        } : "left" == a ? {
            top: b.top + b.height / 2 - d / 2,
            left: b.left - c
        } : {
            top: b.top + b.height / 2 - d / 2,
            left: b.left + b.width
        };
    }, c.prototype.getViewportAdjustedDelta = function(a, b, c, d) {
        var e = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) return e;
        var f = this.options.viewport && this.options.viewport.padding || 0, g = this.getPosition(this.$viewport);
        if (/right|left/.test(a)) {
            var h = b.top - f - g.scroll, i = b.top + f - g.scroll + d;
            h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i);
        } else {
            var j = b.left - f, k = b.left + f + c;
            j < g.left ? e.left = g.left - j : k > g.width && (e.left = g.left + g.width - k);
        }
        return e;
    }, c.prototype.getTitle = function() {
        var a, b = this.$element, c = this.options;
        return a = b.attr("data-original-title") || ("function" == typeof c.title ? c.title.call(b[0]) : c.title);
    }, c.prototype.getUID = function(a) {
        do a += ~~(1e6 * Math.random()); while (document.getElementById(a));
        return a;
    }, c.prototype.tip = function() {
        return this.$tip = this.$tip || a(this.options.template);
    }, c.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow");
    }, c.prototype.validate = function() {
        this.$element[0].parentNode || (this.hide(), this.$element = null, this.options = null);
    }, c.prototype.enable = function() {
        this.enabled = !0;
    }, c.prototype.disable = function() {
        this.enabled = !1;
    }, c.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled;
    }, c.prototype.toggle = function(b) {
        var c = this;
        b && (c = a(b.currentTarget).data("bs." + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), 
        a(b.currentTarget).data("bs." + this.type, c))), c.tip().hasClass("in") ? c.leave(c) : c.enter(c);
    }, c.prototype.destroy = function() {
        clearTimeout(this.timeout), this.hide().$element.off("." + this.type).removeData("bs." + this.type);
    };
    var d = a.fn.tooltip;
    a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function() {
        return a.fn.tooltip = d, this;
    };
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.popover"), f = "object" == typeof b && b;
            (e || "destroy" != b) && (e || d.data("bs.popover", e = new c(this, f)), "string" == typeof b && e[b]());
        });
    }
    var c = function(a, b) {
        this.init("popover", a, b);
    };
    if (!a.fn.tooltip) throw new Error("Popover requires tooltip.js");
    c.VERSION = "3.2.0", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, 
    c.prototype.getDefaults = function() {
        return c.DEFAULTS;
    }, c.prototype.setContent = function() {
        var a = this.tip(), b = this.getTitle(), c = this.getContent();
        a.find(".popover-title")[this.options.html ? "html" : "text"](b), a.find(".popover-content").empty()[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c), 
        a.removeClass("fade top bottom left right in"), a.find(".popover-title").html() || a.find(".popover-title").hide();
    }, c.prototype.hasContent = function() {
        return this.getTitle() || this.getContent();
    }, c.prototype.getContent = function() {
        var a = this.$element, b = this.options;
        return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content);
    }, c.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow");
    }, c.prototype.tip = function() {
        return this.$tip || (this.$tip = a(this.options.template)), this.$tip;
    };
    var d = a.fn.popover;
    a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function() {
        return a.fn.popover = d, this;
    };
}(jQuery), +function(a) {
    "use strict";
    function b(c, d) {
        var e = a.proxy(this.process, this);
        this.$body = a("body"), this.$scrollElement = a(a(c).is("body") ? window : c), this.options = a.extend({}, b.DEFAULTS, d), 
        this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], 
        this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", e), 
        this.refresh(), this.process();
    }
    function c(c) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.scrollspy"), f = "object" == typeof c && c;
            e || d.data("bs.scrollspy", e = new b(this, f)), "string" == typeof c && e[c]();
        });
    }
    b.VERSION = "3.2.0", b.DEFAULTS = {
        offset: 10
    }, b.prototype.getScrollHeight = function() {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
    }, b.prototype.refresh = function() {
        var b = "offset", c = 0;
        a.isWindow(this.$scrollElement[0]) || (b = "position", c = this.$scrollElement.scrollTop()), 
        this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight();
        var d = this;
        this.$body.find(this.selector).map(function() {
            var d = a(this), e = d.data("target") || d.attr("href"), f = /^#./.test(e) && a(e);
            return f && f.length && f.is(":visible") && [ [ f[b]().top + c, e ] ] || null;
        }).sort(function(a, b) {
            return a[0] - b[0];
        }).each(function() {
            d.offsets.push(this[0]), d.targets.push(this[1]);
        });
    }, b.prototype.process = function() {
        var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.getScrollHeight(), d = this.options.offset + c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget;
        if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a);
        if (g && b <= e[0]) return g != (a = f[0]) && this.activate(a);
        for (a = e.length; a--; ) g != f[a] && b >= e[a] && (!e[a + 1] || b <= e[a + 1]) && this.activate(f[a]);
    }, b.prototype.activate = function(b) {
        this.activeTarget = b, a(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
        var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents("li").addClass("active");
        d.parent(".dropdown-menu").length && (d = d.closest("li.dropdown").addClass("active")), 
        d.trigger("activate.bs.scrollspy");
    };
    var d = a.fn.scrollspy;
    a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function() {
        return a.fn.scrollspy = d, this;
    }, a(window).on("load.bs.scrollspy.data-api", function() {
        a('[data-spy="scroll"]').each(function() {
            var b = a(this);
            c.call(b, b.data());
        });
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.tab");
            e || d.data("bs.tab", e = new c(this)), "string" == typeof b && e[b]();
        });
    }
    var c = function(b) {
        this.element = a(b);
    };
    c.VERSION = "3.2.0", c.prototype.show = function() {
        var b = this.element, c = b.closest("ul:not(.dropdown-menu)"), d = b.data("target");
        if (d || (d = b.attr("href"), d = d && d.replace(/.*(?=#[^\s]*$)/, "")), !b.parent("li").hasClass("active")) {
            var e = c.find(".active:last a")[0], f = a.Event("show.bs.tab", {
                relatedTarget: e
            });
            if (b.trigger(f), !f.isDefaultPrevented()) {
                var g = a(d);
                this.activate(b.closest("li"), c), this.activate(g, g.parent(), function() {
                    b.trigger({
                        type: "shown.bs.tab",
                        relatedTarget: e
                    });
                });
            }
        }
    }, c.prototype.activate = function(b, c, d) {
        function e() {
            f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"), 
            b.addClass("active"), g ? (b[0].offsetWidth, b.addClass("in")) : b.removeClass("fade"), 
            b.parent(".dropdown-menu") && b.closest("li.dropdown").addClass("active"), d && d();
        }
        var f = c.find("> .active"), g = d && a.support.transition && f.hasClass("fade");
        g ? f.one("bsTransitionEnd", e).emulateTransitionEnd(150) : e(), f.removeClass("in");
    };
    var d = a.fn.tab;
    a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function() {
        return a.fn.tab = d, this;
    }, a(document).on("click.bs.tab.data-api", '[data-toggle="tab"], [data-toggle="pill"]', function(c) {
        c.preventDefault(), b.call(a(this), "show");
    });
}(jQuery), +function(a) {
    "use strict";
    function b(b) {
        return this.each(function() {
            var d = a(this), e = d.data("bs.affix"), f = "object" == typeof b && b;
            e || d.data("bs.affix", e = new c(this, f)), "string" == typeof b && e[b]();
        });
    }
    var c = function(b, d) {
        this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on("scroll.bs.affix.data-api", a.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", a.proxy(this.checkPositionWithEventLoop, this)), 
        this.$element = a(b), this.affixed = this.unpin = this.pinnedOffset = null, this.checkPosition();
    };
    c.VERSION = "3.2.0", c.RESET = "affix affix-top affix-bottom", c.DEFAULTS = {
        offset: 0,
        target: window
    }, c.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(c.RESET).addClass("affix");
        var a = this.$target.scrollTop(), b = this.$element.offset();
        return this.pinnedOffset = b.top - a;
    }, c.prototype.checkPositionWithEventLoop = function() {
        setTimeout(a.proxy(this.checkPosition, this), 1);
    }, c.prototype.checkPosition = function() {
        if (this.$element.is(":visible")) {
            var b = a(document).height(), d = this.$target.scrollTop(), e = this.$element.offset(), f = this.options.offset, g = f.top, h = f.bottom;
            "object" != typeof f && (h = g = f), "function" == typeof g && (g = f.top(this.$element)), 
            "function" == typeof h && (h = f.bottom(this.$element));
            var i = !(null != this.unpin && d + this.unpin <= e.top) && (null != h && e.top + this.$element.height() >= b - h ? "bottom" : null != g && g >= d && "top");
            if (this.affixed !== i) {
                null != this.unpin && this.$element.css("top", "");
                var j = "affix" + (i ? "-" + i : ""), k = a.Event(j + ".bs.affix");
                this.$element.trigger(k), k.isDefaultPrevented() || (this.affixed = i, this.unpin = "bottom" == i ? this.getPinnedOffset() : null, 
                this.$element.removeClass(c.RESET).addClass(j).trigger(a.Event(j.replace("affix", "affixed"))), 
                "bottom" == i && this.$element.offset({
                    top: b - this.$element.height() - h
                }));
            }
        }
    };
    var d = a.fn.affix;
    a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function() {
        return a.fn.affix = d, this;
    }, a(window).on("load", function() {
        a('[data-spy="affix"]').each(function() {
            var c = a(this), d = c.data();
            d.offset = d.offset || {}, d.offsetBottom && (d.offset.bottom = d.offsetBottom), 
            d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d);
        });
    });
}

/*
* Old olw init removed from here
*/

(jQuery, window, document), !function(a) {
    a.flexslider = function(b, c) {
        var d = a(b);
        d.vars = a.extend({}, a.flexslider.defaults, c);
        var j, e = d.vars.namespace, f = window.navigator && window.navigator.msPointerEnabled && window.MSGesture, g = ("ontouchstart" in window || f || window.DocumentTouch && document instanceof DocumentTouch) && d.vars.touch, h = "click touchend MSPointerUp", i = "", k = "vertical" === d.vars.direction, l = d.vars.reverse, m = d.vars.itemWidth > 0, n = "fade" === d.vars.animation, o = "" !== d.vars.asNavFor, p = {}, q = !0;
        a.data(b, "flexslider", d), p = {
            init: function() {
                d.animating = !1, d.currentSlide = parseInt(d.vars.startAt ? d.vars.startAt : 0, 10), 
                isNaN(d.currentSlide) && (d.currentSlide = 0), d.animatingTo = d.currentSlide, d.atEnd = 0 === d.currentSlide || d.currentSlide === d.last, 
                d.containerSelector = d.vars.selector.substr(0, d.vars.selector.search(" ")), d.slides = a(d.vars.selector, d), 
                d.container = a(d.containerSelector, d), d.count = d.slides.length, d.syncExists = a(d.vars.sync).length > 0, 
                "slide" === d.vars.animation && (d.vars.animation = "swing"), d.prop = k ? "top" : "marginLeft", 
                d.args = {}, d.manualPause = !1, d.stopped = !1, d.started = !1, d.startTimeout = null, 
                d.transitions = !d.vars.video && !n && d.vars.useCSS && function() {
                    var a = document.createElement("div"), b = [ "perspectiveProperty", "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                    for (var c in b) if (void 0 !== a.style[b[c]]) return d.pfx = b[c].replace("Perspective", "").toLowerCase(), 
                    d.prop = "-" + d.pfx + "-transform", !0;
                    return !1;
                }(), d.ensureAnimationEnd = "", "" !== d.vars.controlsContainer && (d.controlsContainer = a(d.vars.controlsContainer).length > 0 && a(d.vars.controlsContainer)), 
                "" !== d.vars.manualControls && (d.manualControls = a(d.vars.manualControls).length > 0 && a(d.vars.manualControls)), 
                d.vars.randomize && (d.slides.sort(function() {
                    return Math.round(Math.random()) - .5;
                }), d.container.empty().append(d.slides)), d.doMath(), d.setup("init"), d.vars.controlNav && p.controlNav.setup(), 
                d.vars.directionNav && p.directionNav.setup(), d.vars.keyboard && (1 === a(d.containerSelector).length || d.vars.multipleKeyboard) && a(document).bind("keyup", function(a) {
                    var b = a.keyCode;
                    if (!d.animating && (39 === b || 37 === b)) {
                        var c = 39 === b ? d.getTarget("next") : 37 === b && d.getTarget("prev");
                        d.flexAnimate(c, d.vars.pauseOnAction);
                    }
                }), d.vars.mousewheel && d.bind("mousewheel", function(a, b) {
                    a.preventDefault();
                    var f = 0 > b ? d.getTarget("next") : d.getTarget("prev");
                    d.flexAnimate(f, d.vars.pauseOnAction);
                }), d.vars.pausePlay && p.pausePlay.setup(), d.vars.slideshow && d.vars.pauseInvisible && p.pauseInvisible.init(), 
                d.vars.slideshow && (d.vars.pauseOnHover && d.hover(function() {
                    d.manualPlay || d.manualPause || d.pause();
                }, function() {
                    d.manualPause || d.manualPlay || d.stopped || d.play();
                }), d.vars.pauseInvisible && p.pauseInvisible.isHidden() || (d.vars.initDelay > 0 ? d.startTimeout = setTimeout(d.play, d.vars.initDelay) : d.play())), 
                o && p.asNav.setup(), g && d.vars.touch && p.touch(), (!n || n && d.vars.smoothHeight) && a(window).bind("resize orientationchange focus", p.resize), 
                d.find("img").attr("draggable", "false"), setTimeout(function() {
                    d.vars.start(d);
                }, 200);
            },
            asNav: {
                setup: function() {
                    d.asNav = !0, d.animatingTo = Math.floor(d.currentSlide / d.move), d.currentItem = d.currentSlide, 
                    d.slides.removeClass(e + "active-slide").eq(d.currentItem).addClass(e + "active-slide"), 
                    f ? (b._slider = d, d.slides.each(function() {
                        var b = this;
                        b._gesture = new MSGesture(), b._gesture.target = b, b.addEventListener("MSPointerDown", function(a) {
                            a.preventDefault(), a.currentTarget._gesture && a.currentTarget._gesture.addPointer(a.pointerId);
                        }, !1), b.addEventListener("MSGestureTap", function(b) {
                            b.preventDefault();
                            var c = a(this), e = c.index();
                            a(d.vars.asNavFor).data("flexslider").animating || c.hasClass("active") || (d.direction = d.currentItem < e ? "next" : "prev", 
                            d.flexAnimate(e, d.vars.pauseOnAction, !1, !0, !0));
                        });
                    })) : d.slides.on(h, function(b) {
                        b.preventDefault();
                        var c = a(this), f = c.index(), g = c.offset().left - a(d).scrollLeft();
                        0 >= g && c.hasClass(e + "active-slide") ? d.flexAnimate(d.getTarget("prev"), !0) : a(d.vars.asNavFor).data("flexslider").animating || c.hasClass(e + "active-slide") || (d.direction = d.currentItem < f ? "next" : "prev", 
                        d.flexAnimate(f, d.vars.pauseOnAction, !1, !0, !0));
                    });
                }
            },
            controlNav: {
                setup: function() {
                    d.manualControls ? p.controlNav.setupManual() : p.controlNav.setupPaging();
                },
                setupPaging: function() {
                    var f, g, b = "thumbnails" === d.vars.controlNav ? "control-thumbs" : "control-paging", c = 1;
                    if (d.controlNavScaffold = a('<ol class="' + e + "control-nav " + e + b + '"></ol>'), 
                    d.pagingCount > 1) for (var j = 0; j < d.pagingCount; j++) {
                        if (g = d.slides.eq(j), f = "thumbnails" === d.vars.controlNav ? '<img src="' + g.attr("data-thumb") + '"/>' : "<a>" + c + "</a>", 
                        "thumbnails" === d.vars.controlNav && !0 === d.vars.thumbCaptions) {
                            var k = g.attr("data-thumbcaption");
                            "" != k && void 0 != k && (f += '<span class="' + e + 'caption">' + k + "</span>");
                        }
                        d.controlNavScaffold.append("<li>" + f + "</li>"), c++;
                    }
                    d.controlsContainer ? a(d.controlsContainer).append(d.controlNavScaffold) : d.append(d.controlNavScaffold), 
                    p.controlNav.set(), p.controlNav.active(), d.controlNavScaffold.delegate("a, img", h, function(b) {
                        if (b.preventDefault(), "" === i || i === b.type) {
                            var c = a(this), f = d.controlNav.index(c);
                            c.hasClass(e + "active") || (d.direction = f > d.currentSlide ? "next" : "prev", 
                            d.flexAnimate(f, d.vars.pauseOnAction));
                        }
                        "" === i && (i = b.type), p.setToClearWatchedEvent();
                    });
                },
                setupManual: function() {
                    d.controlNav = d.manualControls, p.controlNav.active(), d.controlNav.bind(h, function(b) {
                        if (b.preventDefault(), "" === i || i === b.type) {
                            var c = a(this), f = d.controlNav.index(c);
                            c.hasClass(e + "active") || (d.direction = f > d.currentSlide ? "next" : "prev", 
                            d.flexAnimate(f, d.vars.pauseOnAction));
                        }
                        "" === i && (i = b.type), p.setToClearWatchedEvent();
                    });
                },
                set: function() {
                    var b = "thumbnails" === d.vars.controlNav ? "img" : "a";
                    d.controlNav = a("." + e + "control-nav li " + b, d.controlsContainer ? d.controlsContainer : d);
                },
                active: function() {
                    d.controlNav.removeClass(e + "active").eq(d.animatingTo).addClass(e + "active");
                },
                update: function(b, c) {
                    d.pagingCount > 1 && "add" === b ? d.controlNavScaffold.append(a("<li><a>" + d.count + "</a></li>")) : 1 === d.pagingCount ? d.controlNavScaffold.find("li").remove() : d.controlNav.eq(c).closest("li").remove(), 
                    p.controlNav.set(), d.pagingCount > 1 && d.pagingCount !== d.controlNav.length ? d.update(c, b) : p.controlNav.active();
                }
            },
            directionNav: {
                setup: function() {
                    var b = a('<ul class="' + e + 'direction-nav"><li><a class="' + e + 'prev" href="#">' + d.vars.prevText + '</a></li><li><a class="' + e + 'next" href="#">' + d.vars.nextText + "</a></li></ul>");
                    d.controlsContainer ? (a(d.controlsContainer).append(b), d.directionNav = a("." + e + "direction-nav li a", d.controlsContainer)) : (d.append(b), 
                    d.directionNav = a("." + e + "direction-nav li a", d)), p.directionNav.update(), 
                    d.directionNav.bind(h, function(b) {
                        b.preventDefault();
                        var c;
                        ("" === i || i === b.type) && (c = a(this).hasClass(e + "next") ? d.getTarget("next") : d.getTarget("prev"), 
                        d.flexAnimate(c, d.vars.pauseOnAction)), "" === i && (i = b.type), p.setToClearWatchedEvent();
                    });
                },
                update: function() {
                    var a = e + "disabled";
                    1 === d.pagingCount ? d.directionNav.addClass(a).attr("tabindex", "-1") : d.vars.animationLoop ? d.directionNav.removeClass(a).removeAttr("tabindex") : 0 === d.animatingTo ? d.directionNav.removeClass(a).filter("." + e + "prev").addClass(a).attr("tabindex", "-1") : d.animatingTo === d.last ? d.directionNav.removeClass(a).filter("." + e + "next").addClass(a).attr("tabindex", "-1") : d.directionNav.removeClass(a).removeAttr("tabindex");
                }
            },
            pausePlay: {
                setup: function() {
                    var b = a('<div class="' + e + 'pauseplay"><a></a></div>');
                    d.controlsContainer ? (d.controlsContainer.append(b), d.pausePlay = a("." + e + "pauseplay a", d.controlsContainer)) : (d.append(b), 
                    d.pausePlay = a("." + e + "pauseplay a", d)), p.pausePlay.update(d.vars.slideshow ? e + "pause" : e + "play"), 
                    d.pausePlay.bind(h, function(b) {
                        b.preventDefault(), ("" === i || i === b.type) && (a(this).hasClass(e + "pause") ? (d.manualPause = !0, 
                        d.manualPlay = !1, d.pause()) : (d.manualPause = !1, d.manualPlay = !0, d.play())), 
                        "" === i && (i = b.type), p.setToClearWatchedEvent();
                    });
                },
                update: function(a) {
                    "play" === a ? d.pausePlay.removeClass(e + "pause").addClass(e + "play").html(d.vars.playText) : d.pausePlay.removeClass(e + "play").addClass(e + "pause").html(d.vars.pauseText);
                }
            },
            touch: function() {
                function r(f) {
                    d.animating ? f.preventDefault() : (window.navigator.msPointerEnabled || 1 === f.touches.length) && (d.pause(), 
                    g = k ? d.h : d.w, i = Number(new Date()), o = f.touches[0].pageX, p = f.touches[0].pageY, 
                    e = m && l && d.animatingTo === d.last ? 0 : m && l ? d.limit - (d.itemW + d.vars.itemMargin) * d.move * d.animatingTo : m && d.currentSlide === d.last ? d.limit : m ? (d.itemW + d.vars.itemMargin) * d.move * d.currentSlide : l ? (d.last - d.currentSlide + d.cloneOffset) * g : (d.currentSlide + d.cloneOffset) * g, 
                    a = k ? p : o, c = k ? o : p, b.addEventListener("touchmove", s, !1), b.addEventListener("touchend", t, !1));
                }
                function s(b) {
                    o = b.touches[0].pageX, p = b.touches[0].pageY, h = k ? a - p : a - o, j = k ? Math.abs(h) < Math.abs(o - c) : Math.abs(h) < Math.abs(p - c);
                    var f = 500;
                    (!j || Number(new Date()) - i > f) && (b.preventDefault(), !n && d.transitions && (d.vars.animationLoop || (h /= 0 === d.currentSlide && 0 > h || d.currentSlide === d.last && h > 0 ? Math.abs(h) / g + 2 : 1), 
                    d.setProps(e + h, "setTouch")));
                }
                function t() {
                    if (b.removeEventListener("touchmove", s, !1), d.animatingTo === d.currentSlide && !j && null !== h) {
                        var k = l ? -h : h, m = k > 0 ? d.getTarget("next") : d.getTarget("prev");
                        d.canAdvance(m) && (Number(new Date()) - i < 550 && Math.abs(k) > 50 || Math.abs(k) > g / 2) ? d.flexAnimate(m, d.vars.pauseOnAction) : n || d.flexAnimate(d.currentSlide, d.vars.pauseOnAction, !0);
                    }
                    b.removeEventListener("touchend", t, !1), a = null, c = null, h = null, e = null;
                }
                function u(a) {
                    a.stopPropagation(), d.animating ? a.preventDefault() : (d.pause(), b._gesture.addPointer(a.pointerId), 
                    q = 0, g = k ? d.h : d.w, i = Number(new Date()), e = m && l && d.animatingTo === d.last ? 0 : m && l ? d.limit - (d.itemW + d.vars.itemMargin) * d.move * d.animatingTo : m && d.currentSlide === d.last ? d.limit : m ? (d.itemW + d.vars.itemMargin) * d.move * d.currentSlide : l ? (d.last - d.currentSlide + d.cloneOffset) * g : (d.currentSlide + d.cloneOffset) * g);
                }
                function v(a) {
                    a.stopPropagation();
                    var c = a.target._slider;
                    if (c) {
                        var d = -a.translationX, f = -a.translationY;
                        return q += k ? f : d, h = q, j = k ? Math.abs(q) < Math.abs(-d) : Math.abs(q) < Math.abs(-f), 
                        a.detail === a.MSGESTURE_FLAG_INERTIA ? void setImmediate(function() {
                            b._gesture.stop();
                        }) : void ((!j || Number(new Date()) - i > 500) && (a.preventDefault(), !n && c.transitions && (c.vars.animationLoop || (h = q / (0 === c.currentSlide && 0 > q || c.currentSlide === c.last && q > 0 ? Math.abs(q) / g + 2 : 1)), 
                        c.setProps(e + h, "setTouch"))));
                    }
                }
                function w(b) {
                    b.stopPropagation();
                    var d = b.target._slider;
                    if (d) {
                        if (d.animatingTo === d.currentSlide && !j && null !== h) {
                            var f = l ? -h : h, k = f > 0 ? d.getTarget("next") : d.getTarget("prev");
                            d.canAdvance(k) && (Number(new Date()) - i < 550 && Math.abs(f) > 50 || Math.abs(f) > g / 2) ? d.flexAnimate(k, d.vars.pauseOnAction) : n || d.flexAnimate(d.currentSlide, d.vars.pauseOnAction, !0);
                        }
                        a = null, c = null, h = null, e = null, q = 0;
                    }
                }
                var a, c, e, g, h, i, j = !1, o = 0, p = 0, q = 0;
                f ? (b.style.msTouchAction = "none", b._gesture = new MSGesture(), b._gesture.target = b, 
                b.addEventListener("MSPointerDown", u, !1), b._slider = d, b.addEventListener("MSGestureChange", v, !1), 
                b.addEventListener("MSGestureEnd", w, !1)) : b.addEventListener("touchstart", r, !1);
            },
            resize: function() {
                !d.animating && d.is(":visible") && (m || d.doMath(), n ? p.smoothHeight() : m ? (d.slides.width(d.computedW), 
                d.update(d.pagingCount), d.setProps()) : k ? (d.viewport.height(d.h), d.setProps(d.h, "setTotal")) : (d.vars.smoothHeight && p.smoothHeight(), 
                d.newSlides.width(d.computedW), d.setProps(d.computedW, "setTotal")));
            },
            smoothHeight: function(a) {
                if (!k || n) {
                    var b = n ? d : d.viewport;
                    a ? b.animate({
                        height: d.slides.eq(d.animatingTo).height()
                    }, a) : b.height(d.slides.eq(d.animatingTo).height());
                }
            },
            sync: function(b) {
                var c = a(d.vars.sync).data("flexslider"), e = d.animatingTo;
                switch (b) {
                  case "animate":
                    c.flexAnimate(e, d.vars.pauseOnAction, !1, !0);
                    break;

                  case "play":
                    c.playing || c.asNav || c.play();
                    break;

                  case "pause":
                    c.pause();
                }
            },
            uniqueID: function(b) {
                return b.find("[id]").each(function() {
                    var b = a(this);
                    b.attr("id", b.attr("id") + "_clone");
                }), b;
            },
            pauseInvisible: {
                visProp: null,
                init: function() {
                    var a = [ "webkit", "moz", "ms", "o" ];
                    if ("hidden" in document) return "hidden";
                    for (var b = 0; b < a.length; b++) a[b] + "Hidden" in document && (p.pauseInvisible.visProp = a[b] + "Hidden");
                    if (p.pauseInvisible.visProp) {
                        var c = p.pauseInvisible.visProp.replace(/[H|h]idden/, "") + "visibilitychange";
                        document.addEventListener(c, function() {
                            p.pauseInvisible.isHidden() ? d.startTimeout ? clearTimeout(d.startTimeout) : d.pause() : d.started ? d.play() : d.vars.initDelay > 0 ? setTimeout(d.play, d.vars.initDelay) : d.play();
                        });
                    }
                },
                isHidden: function() {
                    return document[p.pauseInvisible.visProp] || !1;
                }
            },
            setToClearWatchedEvent: function() {
                clearTimeout(j), j = setTimeout(function() {
                    i = "";
                }, 3e3);
            }
        }, d.flexAnimate = function(b, c, f, h, i) {
            if (d.vars.animationLoop || b === d.currentSlide || (d.direction = b > d.currentSlide ? "next" : "prev"), 
            o && 1 === d.pagingCount && (d.direction = d.currentItem < b ? "next" : "prev"), 
            !d.animating && (d.canAdvance(b, i) || f) && d.is(":visible")) {
                if (o && h) {
                    var j = a(d.vars.asNavFor).data("flexslider");
                    if (d.atEnd = 0 === b || b === d.count - 1, j.flexAnimate(b, !0, !1, !0, i), d.direction = d.currentItem < b ? "next" : "prev", 
                    j.direction = d.direction, Math.ceil((b + 1) / d.visible) - 1 === d.currentSlide || 0 === b) return d.currentItem = b, 
                    d.slides.removeClass(e + "active-slide").eq(b).addClass(e + "active-slide"), !1;
                    d.currentItem = b, d.slides.removeClass(e + "active-slide").eq(b).addClass(e + "active-slide"), 
                    b = Math.floor(b / d.visible);
                }
                if (d.animating = !0, d.animatingTo = b, c && d.pause(), d.vars.before(d), d.syncExists && !i && p.sync("animate"), 
                d.vars.controlNav && p.controlNav.active(), m || d.slides.removeClass(e + "active-slide").eq(b).addClass(e + "active-slide"), 
                d.atEnd = 0 === b || b === d.last, d.vars.directionNav && p.directionNav.update(), 
                b === d.last && (d.vars.end(d), d.vars.animationLoop || d.pause()), n) g ? (d.slides.eq(d.currentSlide).css({
                    opacity: 0,
                    zIndex: 1
                }), d.slides.eq(b).css({
                    opacity: 1,
                    zIndex: 2
                }), d.wrapup(q)) : (d.slides.eq(d.currentSlide).css({
                    zIndex: 1
                }).animate({
                    opacity: 0
                }, d.vars.animationSpeed, d.vars.easing), d.slides.eq(b).css({
                    zIndex: 2
                }).animate({
                    opacity: 1
                }, d.vars.animationSpeed, d.vars.easing, d.wrapup)); else {
                    var r, s, t, q = k ? d.slides.filter(":first").height() : d.computedW;
                    m ? (r = d.vars.itemMargin, t = (d.itemW + r) * d.move * d.animatingTo, s = t > d.limit && 1 !== d.visible ? d.limit : t) : s = 0 === d.currentSlide && b === d.count - 1 && d.vars.animationLoop && "next" !== d.direction ? l ? (d.count + d.cloneOffset) * q : 0 : d.currentSlide === d.last && 0 === b && d.vars.animationLoop && "prev" !== d.direction ? l ? 0 : (d.count + 1) * q : l ? (d.count - 1 - b + d.cloneOffset) * q : (b + d.cloneOffset) * q, 
                    d.setProps(s, "", d.vars.animationSpeed), d.transitions ? (d.vars.animationLoop && d.atEnd || (d.animating = !1, 
                    d.currentSlide = d.animatingTo), d.container.unbind("webkitTransitionEnd transitionend"), 
                    d.container.bind("webkitTransitionEnd transitionend", function() {
                        clearTimeout(d.ensureAnimationEnd), d.wrapup(q);
                    }), clearTimeout(d.ensureAnimationEnd), d.ensureAnimationEnd = setTimeout(function() {
                        d.wrapup(q);
                    }, d.vars.animationSpeed + 100)) : d.container.animate(d.args, d.vars.animationSpeed, d.vars.easing, function() {
                        d.wrapup(q);
                    });
                }
                d.vars.smoothHeight && p.smoothHeight(d.vars.animationSpeed);
            }
        }, d.wrapup = function(a) {
            n || m || (0 === d.currentSlide && d.animatingTo === d.last && d.vars.animationLoop ? d.setProps(a, "jumpEnd") : d.currentSlide === d.last && 0 === d.animatingTo && d.vars.animationLoop && d.setProps(a, "jumpStart")), 
            d.animating = !1, d.currentSlide = d.animatingTo, d.vars.after(d);
        }, d.animateSlides = function() {
            !d.animating && q && d.flexAnimate(d.getTarget("next"));
        }, d.pause = function() {
            clearInterval(d.animatedSlides), d.animatedSlides = null, d.playing = !1, d.vars.pausePlay && p.pausePlay.update("play"), 
            d.syncExists && p.sync("pause");
        }, d.play = function() {
            d.playing && clearInterval(d.animatedSlides), d.animatedSlides = d.animatedSlides || setInterval(d.animateSlides, d.vars.slideshowSpeed), 
            d.started = d.playing = !0, d.vars.pausePlay && p.pausePlay.update("pause"), d.syncExists && p.sync("play");
        }, d.stop = function() {
            d.pause(), d.stopped = !0;
        }, d.canAdvance = function(a, b) {
            var c = o ? d.pagingCount - 1 : d.last;
            return !!b || (!(!o || d.currentItem !== d.count - 1 || 0 !== a || "prev" !== d.direction) || (!o || 0 !== d.currentItem || a !== d.pagingCount - 1 || "next" === d.direction) && (!(a === d.currentSlide && !o) && (!!d.vars.animationLoop || (!d.atEnd || 0 !== d.currentSlide || a !== c || "next" === d.direction) && (!d.atEnd || d.currentSlide !== c || 0 !== a || "next" !== d.direction))));
        }, d.getTarget = function(a) {
            return d.direction = a, "next" === a ? d.currentSlide === d.last ? 0 : d.currentSlide + 1 : 0 === d.currentSlide ? d.last : d.currentSlide - 1;
        }, d.setProps = function(a, b, c) {
            var e = function() {
                var c = a ? a : (d.itemW + d.vars.itemMargin) * d.move * d.animatingTo, e = function() {
                    if (m) return "setTouch" === b ? a : l && d.animatingTo === d.last ? 0 : l ? d.limit - (d.itemW + d.vars.itemMargin) * d.move * d.animatingTo : d.animatingTo === d.last ? d.limit : c;
                    switch (b) {
                      case "setTotal":
                        return l ? (d.count - 1 - d.currentSlide + d.cloneOffset) * a : (d.currentSlide + d.cloneOffset) * a;

                      case "setTouch":
                        return l ? a : a;

                      case "jumpEnd":
                        return l ? a : d.count * a;

                      case "jumpStart":
                        return l ? d.count * a : a;

                      default:
                        return a;
                    }
                }();
                return -1 * e + "px";
            }();
            d.transitions && (e = k ? "translate3d(0," + e + ",0)" : "translate3d(" + e + ",0,0)", 
            c = void 0 !== c ? c / 1e3 + "s" : "0s", d.container.css("-" + d.pfx + "-transition-duration", c), 
            d.container.css("transition-duration", c)), d.args[d.prop] = e, (d.transitions || void 0 === c) && d.container.css(d.args), 
            d.container.css("transform", e);
        }, d.setup = function(b) {
            if (n) d.slides.css({
                width: "100%",
                float: "left",
                marginRight: "-100%",
                position: "relative"
            }), "init" === b && (g ? d.slides.css({
                opacity: 0,
                display: "block",
                webkitTransition: "opacity " + d.vars.animationSpeed / 1e3 + "s ease",
                zIndex: 1
            }).eq(d.currentSlide).css({
                opacity: 1,
                zIndex: 2
            }) : d.slides.css({
                opacity: 0,
                display: "block",
                zIndex: 1
            }).eq(d.currentSlide).css({
                zIndex: 2
            }).animate({
                opacity: 1
            }, d.vars.animationSpeed, d.vars.easing)), d.vars.smoothHeight && p.smoothHeight(); else {
                var c, f;
                "init" === b && (d.viewport = a('<div class="' + e + 'viewport"></div>').css({
                    overflow: "hidden",
                    position: "relative"
                }).appendTo(d).append(d.container), d.cloneCount = 0, d.cloneOffset = 0, l && (f = a.makeArray(d.slides).reverse(), 
                d.slides = a(f), d.container.empty().append(d.slides))), d.vars.animationLoop && !m && (d.cloneCount = 2, 
                d.cloneOffset = 1, "init" !== b && d.container.find(".clone").remove(), p.uniqueID(d.slides.first().clone().addClass("clone").attr("aria-hidden", "true")).appendTo(d.container), 
                p.uniqueID(d.slides.last().clone().addClass("clone").attr("aria-hidden", "true")).prependTo(d.container)), 
                d.newSlides = a(d.vars.selector, d), c = l ? d.count - 1 - d.currentSlide + d.cloneOffset : d.currentSlide + d.cloneOffset, 
                k && !m ? (d.container.height(200 * (d.count + d.cloneCount) + "%").css("position", "absolute").width("100%"), 
                setTimeout(function() {
                    d.newSlides.css({
                        display: "block"
                    }), d.doMath(), d.viewport.height(d.h), d.setProps(c * d.h, "init");
                }, "init" === b ? 100 : 0)) : (d.container.width(200 * (d.count + d.cloneCount) + "%"), 
                d.setProps(c * d.computedW, "init"), setTimeout(function() {
                    d.doMath(), d.newSlides.css({
                        width: d.computedW,
                        float: "left",
                        display: "block"
                    }), d.vars.smoothHeight && p.smoothHeight();
                }, "init" === b ? 100 : 0));
            }
            m || d.slides.removeClass(e + "active-slide").eq(d.currentSlide).addClass(e + "active-slide"), 
            d.vars.init(d);
        }, d.doMath = function() {
            var a = d.slides.first(), b = d.vars.itemMargin, c = d.vars.minItems, e = d.vars.maxItems;
            d.w = void 0 === d.viewport ? d.width() : d.viewport.width(), d.h = a.height(), 
            d.boxPadding = a.outerWidth() - a.width(), m ? (d.itemT = d.vars.itemWidth + b, 
            d.minW = c ? c * d.itemT : d.w, d.maxW = e ? e * d.itemT - b : d.w, d.itemW = d.minW > d.w ? (d.w - b * (c - 1)) / c : d.maxW < d.w ? (d.w - b * (e - 1)) / e : d.vars.itemWidth > d.w ? d.w : d.vars.itemWidth, 
            d.visible = Math.floor(d.w / d.itemW), d.move = d.vars.move > 0 && d.vars.move < d.visible ? d.vars.move : d.visible, 
            d.pagingCount = Math.ceil((d.count - d.visible) / d.move + 1), d.last = d.pagingCount - 1, 
            d.limit = 1 === d.pagingCount ? 0 : d.vars.itemWidth > d.w ? d.itemW * (d.count - 1) + b * (d.count - 1) : (d.itemW + b) * d.count - d.w - b) : (d.itemW = d.w, 
            d.pagingCount = d.count, d.last = d.count - 1), d.computedW = d.itemW - d.boxPadding;
        }, d.update = function(a, b) {
            d.doMath(), m || (a < d.currentSlide ? d.currentSlide += 1 : a <= d.currentSlide && 0 !== a && (d.currentSlide -= 1), 
            d.animatingTo = d.currentSlide), d.vars.controlNav && !d.manualControls && ("add" === b && !m || d.pagingCount > d.controlNav.length ? p.controlNav.update("add") : ("remove" === b && !m || d.pagingCount < d.controlNav.length) && (m && d.currentSlide > d.last && (d.currentSlide -= 1, 
            d.animatingTo -= 1), p.controlNav.update("remove", d.last))), d.vars.directionNav && p.directionNav.update();
        }, d.addSlide = function(b, c) {
            var e = a(b);
            d.count += 1, d.last = d.count - 1, k && l ? void 0 !== c ? d.slides.eq(d.count - c).after(e) : d.container.prepend(e) : void 0 !== c ? d.slides.eq(c).before(e) : d.container.append(e), 
            d.update(c, "add"), d.slides = a(d.vars.selector + ":not(.clone)", d), d.setup(), 
            d.vars.added(d);
        }, d.removeSlide = function(b) {
            var c = isNaN(b) ? d.slides.index(a(b)) : b;
            d.count -= 1, d.last = d.count - 1, isNaN(b) ? a(b, d.slides).remove() : k && l ? d.slides.eq(d.last).remove() : d.slides.eq(b).remove(), 
            d.doMath(), d.update(c, "remove"), d.slides = a(d.vars.selector + ":not(.clone)", d), 
            d.setup(), d.vars.removed(d);
        }, p.init();
    }, a(window).blur(function() {
        focused = !1;
    }).focus(function() {
        focused = !0;
    }), a.flexslider.defaults = {
        namespace: "flex-",
        selector: ".slides > li",
        animation: "fade",
        easing: "swing",
        direction: "horizontal",
        reverse: !1,
        animationLoop: !0,
        smoothHeight: !1,
        startAt: 0,
        slideshow: !0,
        slideshowSpeed: 7e3,
        animationSpeed: 600,
        initDelay: 0,
        randomize: !1,
        thumbCaptions: !1,
        pauseOnAction: !0,
        pauseOnHover: !1,
        pauseInvisible: !0,
        useCSS: !0,
        touch: !0,
        video: !1,
        controlNav: !0,
        directionNav: !0,
        prevText: "Previous",
        nextText: "Next",
        keyboard: !0,
        multipleKeyboard: !1,
        mousewheel: !1,
        pausePlay: !1,
        pauseText: "Pause",
        playText: "Play",
        controlsContainer: "",
        manualControls: "",
        sync: "",
        asNavFor: "",
        itemWidth: 0,
        itemMargin: 0,
        minItems: 1,
        maxItems: 0,
        move: 0,
        allowOneSlide: !0,
        start: function() {},
        before: function() {},
        after: function() {},
        end: function() {},
        added: function() {},
        removed: function() {},
        init: function() {}
    }, a.fn.flexslider = function(b) {
        if (void 0 === b && (b = {}), "object" == typeof b) return this.each(function() {
            var c = a(this), d = b.selector ? b.selector : ".slides > li", e = c.find(d);
            1 === e.length && b.allowOneSlide === !0 || 0 === e.length ? (e.fadeIn(400), b.start && b.start(c)) : void 0 === c.data("flexslider") && new a.flexslider(this, b);
        });
        var c = a(this).data("flexslider");
        switch (b) {
          case "play":
            c.play();
            break;

          case "pause":
            c.pause();
            break;

          case "stop":
            c.stop();
            break;

          case "next":
            c.flexAnimate(c.getTarget("next"), !0);
            break;

          case "prev":
          case "previous":
            c.flexAnimate(c.getTarget("prev"), !0);
            break;

          default:
            "number" == typeof b && c.flexAnimate(b, !0);
        }
    };
}(jQuery), !function() {
    var a, AbstractChosen, Chosen, SelectParser, b, c = {}.hasOwnProperty, d = function(a, b) {
        function d() {
            this.constructor = a;
        }
        for (var e in b) c.call(b, e) && (a[e] = b[e]);
        return d.prototype = b.prototype, a.prototype = new d(), a.__super__ = b.prototype, 
        a;
    };
    SelectParser = function() {
        function SelectParser() {
            this.options_index = 0, this.parsed = [];
        }
        return SelectParser.prototype.add_node = function(a) {
            return "OPTGROUP" === a.nodeName.toUpperCase() ? this.add_group(a) : this.add_option(a);
        }, SelectParser.prototype.add_group = function(a) {
            var b, c, d, e, f, g;
            for (b = this.parsed.length, this.parsed.push({
                array_index: b,
                group: !0,
                label: this.escapeExpression(a.label),
                children: 0,
                disabled: a.disabled
            }), f = a.childNodes, g = [], d = 0, e = f.length; e > d; d++) c = f[d], g.push(this.add_option(c, b, a.disabled));
            return g;
        }, SelectParser.prototype.add_option = function(a, b, c) {
            return "OPTION" === a.nodeName.toUpperCase() ? ("" !== a.text ? (null != b && (this.parsed[b].children += 1), 
            this.parsed.push({
                array_index: this.parsed.length,
                options_index: this.options_index,
                value: a.value,
                text: a.text,
                html: a.innerHTML,
                selected: a.selected,
                disabled: c === !0 ? c : a.disabled,
                group_array_index: b,
                classes: a.className,
                style: a.style.cssText
            })) : this.parsed.push({
                array_index: this.parsed.length,
                options_index: this.options_index,
                empty: !0
            }), this.options_index += 1) : void 0;
        }, SelectParser.prototype.escapeExpression = function(a) {
            var b, c;
            return null == a || a === !1 ? "" : /[\&\<\>\"\'\`]/.test(a) ? (b = {
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#x27;",
                "`": "&#x60;"
            }, c = /&(?!\w+;)|[\<\>\"\'\`]/g, a.replace(c, function(a) {
                return b[a] || "&amp;";
            })) : a;
        }, SelectParser;
    }(), SelectParser.select_to_array = function(a) {
        var b, c, d, e, f;
        for (c = new SelectParser(), f = a.childNodes, d = 0, e = f.length; e > d; d++) b = f[d], 
        c.add_node(b);
        return c.parsed;
    }, AbstractChosen = function() {
        function AbstractChosen(a, b) {
            this.form_field = a, this.options = null != b ? b : {}, AbstractChosen.browser_is_supported() && (this.is_multiple = this.form_field.multiple, 
            this.set_default_text(), this.set_default_values(), this.setup(), this.set_up_html(), 
            this.register_observers());
        }
        return AbstractChosen.prototype.set_default_values = function() {
            var a = this;
            return this.click_test_action = function(b) {
                return a.test_active_click(b);
            }, this.activate_action = function(b) {
                return a.activate_field(b);
            }, this.active_field = !1, this.mouse_on_container = !1, this.results_showing = !1, 
            this.result_highlighted = null, this.allow_single_deselect = null != this.options.allow_single_deselect && null != this.form_field.options[0] && "" === this.form_field.options[0].text && this.options.allow_single_deselect, 
            this.disable_search_threshold = this.options.disable_search_threshold || 0, this.disable_search = this.options.disable_search || !1, 
            this.enable_split_word_search = null == this.options.enable_split_word_search || this.options.enable_split_word_search, 
            this.group_search = null == this.options.group_search || this.options.group_search, 
            this.search_contains = this.options.search_contains || !1, this.single_backstroke_delete = null == this.options.single_backstroke_delete || this.options.single_backstroke_delete, 
            this.max_selected_options = this.options.max_selected_options || 1 / 0, this.inherit_select_classes = this.options.inherit_select_classes || !1, 
            this.display_selected_options = null == this.options.display_selected_options || this.options.display_selected_options, 
            this.display_disabled_options = null == this.options.display_disabled_options || this.options.display_disabled_options;
        }, AbstractChosen.prototype.set_default_text = function() {
            return this.default_text = this.form_field.getAttribute("data-placeholder") ? this.form_field.getAttribute("data-placeholder") : this.is_multiple ? this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text : this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text, 
            this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || AbstractChosen.default_no_result_text;
        }, AbstractChosen.prototype.mouse_enter = function() {
            return this.mouse_on_container = !0;
        }, AbstractChosen.prototype.mouse_leave = function() {
            return this.mouse_on_container = !1;
        }, AbstractChosen.prototype.input_focus = function() {
            var a = this;
            if (this.is_multiple) {
                if (!this.active_field) return setTimeout(function() {
                    return a.container_mousedown();
                }, 50);
            } else if (!this.active_field) return this.activate_field();
        }, AbstractChosen.prototype.input_blur = function() {
            var a = this;
            return this.mouse_on_container ? void 0 : (this.active_field = !1, setTimeout(function() {
                return a.blur_test();
            }, 100));
        }, AbstractChosen.prototype.results_option_build = function(a) {
            var b, c, d, e, f;
            for (b = "", f = this.results_data, d = 0, e = f.length; e > d; d++) c = f[d], b += c.group ? this.result_add_group(c) : this.result_add_option(c), 
            (null != a ? a.first : void 0) && (c.selected && this.is_multiple ? this.choice_build(c) : c.selected && !this.is_multiple && this.single_set_selected_text(c.text));
            return b;
        }, AbstractChosen.prototype.result_add_option = function(a) {
            var b, c;
            return a.search_match && this.include_option_in_results(a) ? (b = [], a.disabled || a.selected && this.is_multiple || b.push("active-result"), 
            !a.disabled || a.selected && this.is_multiple || b.push("disabled-result"), a.selected && b.push("result-selected"), 
            null != a.group_array_index && b.push("group-option"), "" !== a.classes && b.push(a.classes), 
            c = document.createElement("li"), c.className = b.join(" "), c.style.cssText = a.style, 
            c.setAttribute("data-option-array-index", a.array_index), c.innerHTML = a.search_text, 
            this.outerHTML(c)) : "";
        }, AbstractChosen.prototype.result_add_group = function(a) {
            var b;
            return (a.search_match || a.group_match) && a.active_options > 0 ? (b = document.createElement("li"), 
            b.className = "group-result", b.innerHTML = a.search_text, this.outerHTML(b)) : "";
        }, AbstractChosen.prototype.results_update_field = function() {
            return this.set_default_text(), this.is_multiple || this.results_reset_cleanup(), 
            this.result_clear_highlight(), this.results_build(), this.results_showing ? this.winnow_results() : void 0;
        }, AbstractChosen.prototype.reset_single_select_options = function() {
            var a, b, c, d, e;
            for (d = this.results_data, e = [], b = 0, c = d.length; c > b; b++) a = d[b], a.selected ? e.push(a.selected = !1) : e.push(void 0);
            return e;
        }, AbstractChosen.prototype.results_toggle = function() {
            return this.results_showing ? this.results_hide() : this.results_show();
        }, AbstractChosen.prototype.results_search = function() {
            return this.results_showing ? this.winnow_results() : this.results_show();
        }, AbstractChosen.prototype.winnow_results = function() {
            var a, b, c, d, e, f, g, h, i, j, k, l, m;
            for (this.no_results_clear(), e = 0, g = this.get_search_text(), a = g.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), 
            d = this.search_contains ? "" : "^", c = new RegExp(d + a, "i"), j = new RegExp(a, "i"), 
            m = this.results_data, k = 0, l = m.length; l > k; k++) b = m[k], b.search_match = !1, 
            f = null, this.include_option_in_results(b) && (b.group && (b.group_match = !1, 
            b.active_options = 0), null != b.group_array_index && this.results_data[b.group_array_index] && (f = this.results_data[b.group_array_index], 
            0 === f.active_options && f.search_match && (e += 1), f.active_options += 1), (!b.group || this.group_search) && (b.search_text = b.group ? b.label : b.html, 
            b.search_match = this.search_string_match(b.search_text, c), b.search_match && !b.group && (e += 1), 
            b.search_match ? (g.length && (h = b.search_text.search(j), i = b.search_text.substr(0, h + g.length) + "</em>" + b.search_text.substr(h + g.length), 
            b.search_text = i.substr(0, h) + "<em>" + i.substr(h)), null != f && (f.group_match = !0)) : null != b.group_array_index && this.results_data[b.group_array_index].search_match && (b.search_match = !0)));
            return this.result_clear_highlight(), 1 > e && g.length ? (this.update_results_content(""), 
            this.no_results(g)) : (this.update_results_content(this.results_option_build()), 
            this.winnow_results_set_highlight());
        }, AbstractChosen.prototype.search_string_match = function(a, b) {
            var c, d, e, f;
            if (b.test(a)) return !0;
            if (this.enable_split_word_search && (a.indexOf(" ") >= 0 || 0 === a.indexOf("[")) && (d = a.replace(/\[|\]/g, "").split(" "), 
            d.length)) for (e = 0, f = d.length; f > e; e++) if (c = d[e], b.test(c)) return !0;
        }, AbstractChosen.prototype.choices_count = function() {
            var a, b, c, d;
            if (null != this.selected_option_count) return this.selected_option_count;
            for (this.selected_option_count = 0, d = this.form_field.options, b = 0, c = d.length; c > b; b++) a = d[b], 
            a.selected && (this.selected_option_count += 1);
            return this.selected_option_count;
        }, AbstractChosen.prototype.choices_click = function(a) {
            return a.preventDefault(), this.results_showing || this.is_disabled ? void 0 : this.results_show();
        }, AbstractChosen.prototype.keyup_checker = function(a) {
            var b, c;
            switch (b = null != (c = a.which) ? c : a.keyCode, this.search_field_scale(), b) {
              case 8:
                if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) return this.keydown_backstroke();
                if (!this.pending_backstroke) return this.result_clear_highlight(), this.results_search();
                break;

              case 13:
                if (a.preventDefault(), this.results_showing) return this.result_select(a);
                break;

              case 27:
                return this.results_showing && this.results_hide(), !0;

              case 9:
              case 38:
              case 40:
              case 16:
              case 91:
              case 17:
                break;

              default:
                return this.results_search();
            }
        }, AbstractChosen.prototype.clipboard_event_checker = function() {
            var a = this;
            return setTimeout(function() {
                return a.results_search();
            }, 50);
        }, AbstractChosen.prototype.container_width = function() {
            return null != this.options.width ? this.options.width : "" + this.form_field.offsetWidth + "px";
        }, AbstractChosen.prototype.include_option_in_results = function(a) {
            return !(this.is_multiple && !this.display_selected_options && a.selected) && (!(!this.display_disabled_options && a.disabled) && !a.empty);
        }, AbstractChosen.prototype.search_results_touchstart = function(a) {
            return this.touch_started = !0, this.search_results_mouseover(a);
        }, AbstractChosen.prototype.search_results_touchmove = function(a) {
            return this.touch_started = !1, this.search_results_mouseout(a);
        }, AbstractChosen.prototype.search_results_touchend = function(a) {
            return this.touch_started ? this.search_results_mouseup(a) : void 0;
        }, AbstractChosen.prototype.outerHTML = function(a) {
            var b;
            return a.outerHTML ? a.outerHTML : (b = document.createElement("div"), b.appendChild(a), 
            b.innerHTML);
        }, AbstractChosen.browser_is_supported = function() {
            return "Microsoft Internet Explorer" === window.navigator.appName ? document.documentMode >= 8 : !/iP(od|hone)/i.test(window.navigator.userAgent) && (!/Android/i.test(window.navigator.userAgent) || !/Mobile/i.test(window.navigator.userAgent));
        }, AbstractChosen.default_multiple_text = "Select Some Options", AbstractChosen.default_single_text = "Select an Option", 
        AbstractChosen.default_no_result_text = "No results match", AbstractChosen;
    }(), a = jQuery, a.fn.extend({
        chosen: function(b) {
            return AbstractChosen.browser_is_supported() ? this.each(function() {
                var c, d;
                c = a(this), d = c.data("chosen"), "destroy" === b && d ? d.destroy() : d || c.data("chosen", new Chosen(this, b));
            }) : this;
        }
    }), Chosen = function(c) {
        function Chosen() {
            return b = Chosen.__super__.constructor.apply(this, arguments);
        }
        return d(Chosen, c), Chosen.prototype.setup = function() {
            return this.form_field_jq = a(this.form_field), this.current_selectedIndex = this.form_field.selectedIndex, 
            this.is_rtl = this.form_field_jq.hasClass("chosen-rtl");
        }, Chosen.prototype.set_up_html = function() {
            var b, c;
            return b = [ "chosen-container" ], b.push("chosen-container-" + (this.is_multiple ? "multi" : "single")), 
            this.inherit_select_classes && this.form_field.className && b.push(this.form_field.className), 
            this.is_rtl && b.push("chosen-rtl"), c = {
                class: b.join(" "),
                style: "width: " + this.container_width() + ";",
                title: this.form_field.title
            }, this.form_field.id.length && (c.id = this.form_field.id.replace(/[^\w]/g, "_") + "_chosen"), 
            this.container = a("<div />", c), this.is_multiple ? this.container.html('<ul class="chosen-choices"><li class="search-field"><input type="text" value="' + this.default_text + '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chosen-drop"><ul class="chosen-results"></ul></div>') : this.container.html('<a class="chosen-single chosen-default" tabindex="-1"><span>' + this.default_text + '</span><div><b></b></div></a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" /></div><ul class="chosen-results"></ul></div>'), 
            this.form_field_jq.hide().after(this.container), this.dropdown = this.container.find("div.chosen-drop").first(), 
            this.search_field = this.container.find("input").first(), this.search_results = this.container.find("ul.chosen-results").first(), 
            this.search_field_scale(), this.search_no_results = this.container.find("li.no-results").first(), 
            this.is_multiple ? (this.search_choices = this.container.find("ul.chosen-choices").first(), 
            this.search_container = this.container.find("li.search-field").first()) : (this.search_container = this.container.find("div.chosen-search").first(), 
            this.selected_item = this.container.find(".chosen-single").first()), this.results_build(), 
            this.set_tab_index(), this.set_label_behavior(), this.form_field_jq.trigger("chosen:ready", {
                chosen: this
            });
        }, Chosen.prototype.register_observers = function() {
            var a = this;
            return this.container.bind("mousedown.chosen", function(b) {
                a.container_mousedown(b);
            }), this.container.bind("mouseup.chosen", function(b) {
                a.container_mouseup(b);
            }), this.container.bind("mouseenter.chosen", function(b) {
                a.mouse_enter(b);
            }), this.container.bind("mouseleave.chosen", function(b) {
                a.mouse_leave(b);
            }), this.search_results.bind("mouseup.chosen", function(b) {
                a.search_results_mouseup(b);
            }), this.search_results.bind("mouseover.chosen", function(b) {
                a.search_results_mouseover(b);
            }), this.search_results.bind("mouseout.chosen", function(b) {
                a.search_results_mouseout(b);
            }), this.search_results.bind("mousewheel.chosen DOMMouseScroll.chosen", function(b) {
                a.search_results_mousewheel(b);
            }), this.search_results.bind("touchstart.chosen", function(b) {
                a.search_results_touchstart(b);
            }), this.search_results.bind("touchmove.chosen", function(b) {
                a.search_results_touchmove(b);
            }), this.search_results.bind("touchend.chosen", function(b) {
                a.search_results_touchend(b);
            }), this.form_field_jq.bind("chosen:updated.chosen", function(b) {
                a.results_update_field(b);
            }), this.form_field_jq.bind("chosen:activate.chosen", function(b) {
                a.activate_field(b);
            }), this.form_field_jq.bind("chosen:open.chosen", function(b) {
                a.container_mousedown(b);
            }), this.form_field_jq.bind("chosen:close.chosen", function(b) {
                a.input_blur(b);
            }), this.search_field.bind("blur.chosen", function(b) {
                a.input_blur(b);
            }), this.search_field.bind("keyup.chosen", function(b) {
                a.keyup_checker(b);
            }), this.search_field.bind("keydown.chosen", function(b) {
                a.keydown_checker(b);
            }), this.search_field.bind("focus.chosen", function(b) {
                a.input_focus(b);
            }), this.search_field.bind("cut.chosen", function(b) {
                a.clipboard_event_checker(b);
            }), this.search_field.bind("paste.chosen", function(b) {
                a.clipboard_event_checker(b);
            }), this.is_multiple ? this.search_choices.bind("click.chosen", function(b) {
                a.choices_click(b);
            }) : this.container.bind("click.chosen", function(a) {
                a.preventDefault();
            });
        }, Chosen.prototype.destroy = function() {
            return a(this.container[0].ownerDocument).unbind("click.chosen", this.click_test_action), 
            this.search_field[0].tabIndex && (this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex), 
            this.container.remove(), this.form_field_jq.removeData("chosen"), this.form_field_jq.show();
        }, Chosen.prototype.search_field_disabled = function() {
            return this.is_disabled = this.form_field_jq[0].disabled, this.is_disabled ? (this.container.addClass("chosen-disabled"), 
            this.search_field[0].disabled = !0, this.is_multiple || this.selected_item.unbind("focus.chosen", this.activate_action), 
            this.close_field()) : (this.container.removeClass("chosen-disabled"), this.search_field[0].disabled = !1, 
            this.is_multiple ? void 0 : this.selected_item.bind("focus.chosen", this.activate_action));
        }, Chosen.prototype.container_mousedown = function(b) {
            return this.is_disabled || (b && "mousedown" === b.type && !this.results_showing && b.preventDefault(), 
            null != b && a(b.target).hasClass("search-choice-close")) ? void 0 : (this.active_field ? this.is_multiple || !b || a(b.target)[0] !== this.selected_item[0] && !a(b.target).parents("a.chosen-single").length || (b.preventDefault(), 
            this.results_toggle()) : (this.is_multiple && this.search_field.val(""), a(this.container[0].ownerDocument).bind("click.chosen", this.click_test_action), 
            this.results_show()), this.activate_field());
        }, Chosen.prototype.container_mouseup = function(a) {
            return "ABBR" !== a.target.nodeName || this.is_disabled ? void 0 : this.results_reset(a);
        }, Chosen.prototype.search_results_mousewheel = function(a) {
            var b;
            return a.originalEvent && (b = -a.originalEvent.wheelDelta || a.originalEvent.detail), 
            null != b ? (a.preventDefault(), "DOMMouseScroll" === a.type && (b *= 40), this.search_results.scrollTop(b + this.search_results.scrollTop())) : void 0;
        }, Chosen.prototype.blur_test = function() {
            return !this.active_field && this.container.hasClass("chosen-container-active") ? this.close_field() : void 0;
        }, Chosen.prototype.close_field = function() {
            return a(this.container[0].ownerDocument).unbind("click.chosen", this.click_test_action), 
            this.active_field = !1, this.results_hide(), this.container.removeClass("chosen-container-active"), 
            this.clear_backstroke(), this.show_search_field_default(), this.search_field_scale();
        }, Chosen.prototype.activate_field = function() {
            return this.container.addClass("chosen-container-active"), this.active_field = !0, 
            this.search_field.val(this.search_field.val()), this.search_field.focus();
        }, Chosen.prototype.test_active_click = function(b) {
            var c;
            return c = a(b.target).closest(".chosen-container"), c.length && this.container[0] === c[0] ? this.active_field = !0 : this.close_field();
        }, Chosen.prototype.results_build = function() {
            return this.parsing = !0, this.selected_option_count = null, this.results_data = SelectParser.select_to_array(this.form_field), 
            this.is_multiple ? this.search_choices.find("li.search-choice").remove() : this.is_multiple || (this.single_set_selected_text(), 
            this.disable_search || this.form_field.options.length <= this.disable_search_threshold ? (this.search_field[0].readOnly = !0, 
            this.container.addClass("chosen-container-single-nosearch")) : (this.search_field[0].readOnly = !1, 
            this.container.removeClass("chosen-container-single-nosearch"))), this.update_results_content(this.results_option_build({
                first: !0
            })), this.search_field_disabled(), this.show_search_field_default(), this.search_field_scale(), 
            this.parsing = !1;
        }, Chosen.prototype.result_do_highlight = function(a) {
            var b, c, d, e, f;
            if (a.length) {
                if (this.result_clear_highlight(), this.result_highlight = a, this.result_highlight.addClass("highlighted"), 
                d = parseInt(this.search_results.css("maxHeight"), 10), f = this.search_results.scrollTop(), 
                e = d + f, c = this.result_highlight.position().top + this.search_results.scrollTop(), 
                b = c + this.result_highlight.outerHeight(), b >= e) return this.search_results.scrollTop(b - d > 0 ? b - d : 0);
                if (f > c) return this.search_results.scrollTop(c);
            }
        }, Chosen.prototype.result_clear_highlight = function() {
            return this.result_highlight && this.result_highlight.removeClass("highlighted"), 
            this.result_highlight = null;
        }, Chosen.prototype.results_show = function() {
            return this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", {
                chosen: this
            }), !1) : (this.container.addClass("chosen-with-drop"), this.results_showing = !0, 
            this.search_field.focus(), this.search_field.val(this.search_field.val()), this.winnow_results(), 
            this.form_field_jq.trigger("chosen:showing_dropdown", {
                chosen: this
            }));
        }, Chosen.prototype.update_results_content = function(a) {
            return this.search_results.html(a);
        }, Chosen.prototype.results_hide = function() {
            return this.results_showing && (this.result_clear_highlight(), this.container.removeClass("chosen-with-drop"), 
            this.form_field_jq.trigger("chosen:hiding_dropdown", {
                chosen: this
            })), this.results_showing = !1;
        }, Chosen.prototype.set_tab_index = function() {
            var a;
            return this.form_field.tabIndex ? (a = this.form_field.tabIndex, this.form_field.tabIndex = -1, 
            this.search_field[0].tabIndex = a) : void 0;
        }, Chosen.prototype.set_label_behavior = function() {
            var b = this;
            return this.form_field_label = this.form_field_jq.parents("label"), !this.form_field_label.length && this.form_field.id.length && (this.form_field_label = a("label[for='" + this.form_field.id + "']")), 
            this.form_field_label.length > 0 ? this.form_field_label.bind("click.chosen", function(a) {
                return b.is_multiple ? b.container_mousedown(a) : b.activate_field();
            }) : void 0;
        }, Chosen.prototype.show_search_field_default = function() {
            return this.is_multiple && this.choices_count() < 1 && !this.active_field ? (this.search_field.val(this.default_text), 
            this.search_field.addClass("default")) : (this.search_field.val(""), this.search_field.removeClass("default"));
        }, Chosen.prototype.search_results_mouseup = function(b) {
            var c;
            return c = a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first(), 
            c.length ? (this.result_highlight = c, this.result_select(b), this.search_field.focus()) : void 0;
        }, Chosen.prototype.search_results_mouseover = function(b) {
            var c;
            return c = a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first(), 
            c ? this.result_do_highlight(c) : void 0;
        }, Chosen.prototype.search_results_mouseout = function(b) {
            return a(b.target).hasClass("active-result") ? this.result_clear_highlight() : void 0;
        }, Chosen.prototype.choice_build = function(b) {
            var c, d, e = this;
            return c = a("<li />", {
                class: "search-choice"
            }).html("<span>" + b.html + "</span>"), b.disabled ? c.addClass("search-choice-disabled") : (d = a("<a />", {
                class: "search-choice-close",
                "data-option-array-index": b.array_index
            }), d.bind("click.chosen", function(a) {
                return e.choice_destroy_link_click(a);
            }), c.append(d)), this.search_container.before(c);
        }, Chosen.prototype.choice_destroy_link_click = function(b) {
            return b.preventDefault(), b.stopPropagation(), this.is_disabled ? void 0 : this.choice_destroy(a(b.target));
        }, Chosen.prototype.choice_destroy = function(a) {
            return this.result_deselect(a[0].getAttribute("data-option-array-index")) ? (this.show_search_field_default(), 
            this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1 && this.results_hide(), 
            a.parents("li").first().remove(), this.search_field_scale()) : void 0;
        }, Chosen.prototype.results_reset = function() {
            return this.reset_single_select_options(), this.form_field.options[0].selected = !0, 
            this.single_set_selected_text(), this.show_search_field_default(), this.results_reset_cleanup(), 
            this.form_field_jq.trigger("change"), this.active_field ? this.results_hide() : void 0;
        }, Chosen.prototype.results_reset_cleanup = function() {
            return this.current_selectedIndex = this.form_field.selectedIndex, this.selected_item.find("abbr").remove();
        }, Chosen.prototype.result_select = function(a) {
            var b, c;
            return this.result_highlight ? (b = this.result_highlight, this.result_clear_highlight(), 
            this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", {
                chosen: this
            }), !1) : (this.is_multiple ? b.removeClass("active-result") : this.reset_single_select_options(), 
            c = this.results_data[b[0].getAttribute("data-option-array-index")], c.selected = !0, 
            this.form_field.options[c.options_index].selected = !0, this.selected_option_count = null, 
            this.is_multiple ? this.choice_build(c) : this.single_set_selected_text(c.text), 
            (a.metaKey || a.ctrlKey) && this.is_multiple || this.results_hide(), this.search_field.val(""), 
            (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) && this.form_field_jq.trigger("change", {
                selected: this.form_field.options[c.options_index].value
            }), this.current_selectedIndex = this.form_field.selectedIndex, this.search_field_scale())) : void 0;
        }, Chosen.prototype.single_set_selected_text = function(a) {
            return null == a && (a = this.default_text), a === this.default_text ? this.selected_item.addClass("chosen-default") : (this.single_deselect_control_build(), 
            this.selected_item.removeClass("chosen-default")), this.selected_item.find("span").text(a);
        }, Chosen.prototype.result_deselect = function(a) {
            var b;
            return b = this.results_data[a], !this.form_field.options[b.options_index].disabled && (b.selected = !1, 
            this.form_field.options[b.options_index].selected = !1, this.selected_option_count = null, 
            this.result_clear_highlight(), this.results_showing && this.winnow_results(), this.form_field_jq.trigger("change", {
                deselected: this.form_field.options[b.options_index].value
            }), this.search_field_scale(), !0);
        }, Chosen.prototype.single_deselect_control_build = function() {
            return this.allow_single_deselect ? (this.selected_item.find("abbr").length || this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'), 
            this.selected_item.addClass("chosen-single-with-deselect")) : void 0;
        }, Chosen.prototype.get_search_text = function() {
            return this.search_field.val() === this.default_text ? "" : a("<div/>").text(a.trim(this.search_field.val())).html();
        }, Chosen.prototype.winnow_results_set_highlight = function() {
            var a, b;
            return b = this.is_multiple ? [] : this.search_results.find(".result-selected.active-result"), 
            a = b.length ? b.first() : this.search_results.find(".active-result").first(), null != a ? this.result_do_highlight(a) : void 0;
        }, Chosen.prototype.no_results = function(b) {
            var c;
            return c = a('<li class="no-results">' + this.results_none_found + ' "<span></span>"</li>'), 
            c.find("span").first().html(b), this.search_results.append(c), this.form_field_jq.trigger("chosen:no_results", {
                chosen: this
            });
        }, Chosen.prototype.no_results_clear = function() {
            return this.search_results.find(".no-results").remove();
        }, Chosen.prototype.keydown_arrow = function() {
            var a;
            return this.results_showing && this.result_highlight ? (a = this.result_highlight.nextAll("li.active-result").first()) ? this.result_do_highlight(a) : void 0 : this.results_show();
        }, Chosen.prototype.keyup_arrow = function() {
            var a;
            return this.results_showing || this.is_multiple ? this.result_highlight ? (a = this.result_highlight.prevAll("li.active-result"), 
            a.length ? this.result_do_highlight(a.first()) : (this.choices_count() > 0 && this.results_hide(), 
            this.result_clear_highlight())) : void 0 : this.results_show();
        }, Chosen.prototype.keydown_backstroke = function() {
            var a;
            return this.pending_backstroke ? (this.choice_destroy(this.pending_backstroke.find("a").first()), 
            this.clear_backstroke()) : (a = this.search_container.siblings("li.search-choice").last(), 
            a.length && !a.hasClass("search-choice-disabled") ? (this.pending_backstroke = a, 
            this.single_backstroke_delete ? this.keydown_backstroke() : this.pending_backstroke.addClass("search-choice-focus")) : void 0);
        }, Chosen.prototype.clear_backstroke = function() {
            return this.pending_backstroke && this.pending_backstroke.removeClass("search-choice-focus"), 
            this.pending_backstroke = null;
        }, Chosen.prototype.keydown_checker = function(a) {
            var b, c;
            switch (b = null != (c = a.which) ? c : a.keyCode, this.search_field_scale(), 8 !== b && this.pending_backstroke && this.clear_backstroke(), 
            b) {
              case 8:
                this.backstroke_length = this.search_field.val().length;
                break;

              case 9:
                this.results_showing && !this.is_multiple && this.result_select(a), this.mouse_on_container = !1;
                break;

              case 13:
                a.preventDefault();
                break;

              case 38:
                a.preventDefault(), this.keyup_arrow();
                break;

              case 40:
                a.preventDefault(), this.keydown_arrow();
            }
        }, Chosen.prototype.search_field_scale = function() {
            var b, c, d, e, f, g, h, i, j;
            if (this.is_multiple) {
                for (d = 0, h = 0, f = "position:absolute; left: -1000px; top: -1000px; display:none;", 
                g = [ "font-size", "font-style", "font-weight", "font-family", "line-height", "text-transform", "letter-spacing" ], 
                i = 0, j = g.length; j > i; i++) e = g[i], f += e + ":" + this.search_field.css(e) + ";";
                return b = a("<div />", {
                    style: f
                }), b.text(this.search_field.val()), a("body").append(b), h = b.width() + 25, b.remove(), 
                c = this.container.outerWidth(), h > c - 10 && (h = c - 10), this.search_field.css({
                    width: h + "px"
                });
            }
        }, Chosen;
    }(AbstractChosen);
}.call(this), function($, undf) {
    $.MixItUp = function() {
        var self = this;
        self._execAction("_constructor", 0), $.extend(self, {
            selectors: {
                target: ".mix",
                filter: ".filter",
                sort: ".sort"
            },
            animation: {
                enable: !0,
                effects: "fade scale",
                duration: 600,
                easing: "ease",
                perspectiveDistance: "3000",
                perspectiveOrigin: "50% 50%",
                queue: !0,
                queueLimit: 1,
                animateChangeLayout: !1,
                animateResizeContainer: !0,
                animateResizeTargets: !1,
                staggerSequence: !1,
                reverseOut: !1
            },
            callbacks: {
                onMixLoad: !1,
                onMixStart: !1,
                onMixBusy: !1,
                onMixEnd: !1,
                onMixFail: !1,
                _user: !1
            },
            controls: {
                enable: !0,
                live: !1,
                toggleFilterButtons: !1,
                toggleLogic: "or",
                activeClass: "active"
            },
            layout: {
                display: "inline-block",
                containerClass: "",
                containerClassFail: "fail"
            },
            load: {
                filter: "all",
                sort: !1
            },
            _$body: null,
            _$container: null,
            _$targets: null,
            _$parent: null,
            _$sortButtons: null,
            _$filterButtons: null,
            _suckMode: !1,
            _mixing: !1,
            _sorting: !1,
            _clicking: !1,
            _loading: !0,
            _changingLayout: !1,
            _changingClass: !1,
            _changingDisplay: !1,
            _origOrder: [],
            _startOrder: [],
            _newOrder: [],
            _activeFilter: null,
            _toggleArray: [],
            _toggleString: "",
            _activeSort: "default:asc",
            _newSort: null,
            _startHeight: null,
            _newHeight: null,
            _incPadding: !0,
            _newDisplay: null,
            _newClass: null,
            _targetsBound: 0,
            _targetsDone: 0,
            _queue: [],
            _$show: $(),
            _$hide: $()
        }), self._execAction("_constructor", 1);
    }, $.MixItUp.prototype = {
        constructor: $.MixItUp,
        _instances: {},
        _handled: {
            _filter: {},
            _sort: {}
        },
        _bound: {
            _filter: {},
            _sort: {}
        },
        _actions: {},
        _filters: {},
        extend: function(extension) {
            for (var key in extension) $.MixItUp.prototype[key] = extension[key];
        },
        addAction: function(hook, name, func, priority) {
            $.MixItUp.prototype._addHook("_actions", hook, name, func, priority);
        },
        addFilter: function(hook, name, func, priority) {
            $.MixItUp.prototype._addHook("_filters", hook, name, func, priority);
        },
        _addHook: function(type, hook, name, func, priority) {
            var collection = $.MixItUp.prototype[type], obj = {};
            priority = 1 === priority || "post" === priority ? "post" : "pre", obj[hook] = {}, 
            obj[hook][priority] = {}, obj[hook][priority][name] = func, $.extend(!0, collection, obj);
        },
        _init: function(domNode, config) {
            var self = this;
            if (self._execAction("_init", 0, arguments), config && $.extend(!0, self, config), 
            self._$body = $("body"), self._domNode = domNode, self._$container = $(domNode), 
            self._$container.addClass(self.layout.containerClass), self._id = domNode.id, self._platformDetect(), 
            self._brake = self._getPrefixedCSS("transition", "none"), self._refresh(!0), self._$parent = self._$targets.parent().length ? self._$targets.parent() : self._$container, 
            self.load.sort && (self._newSort = self._parseSort(self.load.sort), self._newSortString = self.load.sort, 
            self._activeSort = self.load.sort, self._sort(), self._printSort()), self._activeFilter = "all" === self.load.filter ? self.selectors.target : "none" === self.load.filter ? "" : self.load.filter, 
            self.controls.enable && self._bindHandlers(), self.controls.toggleFilterButtons) {
                self._buildToggleArray();
                for (var i = 0; i < self._toggleArray.length; i++) self._updateControls({
                    filter: self._toggleArray[i],
                    sort: self._activeSort
                }, !0);
            } else self.controls.enable && self._updateControls({
                filter: self._activeFilter,
                sort: self._activeSort
            });
            self._filter(), self._init = !0, self._$container.data("mixItUp", self), self._execAction("_init", 1, arguments), 
            self._buildState(), self._$targets.css(self._brake), self._goMix(self.animation.enable);
        },
        _platformDetect: function() {
            var self = this, vendorsTrans = [ "Webkit", "Moz", "O", "ms" ], vendorsRAF = [ "webkit", "moz" ], chrome = window.navigator.appVersion.match(/Chrome\/(\d+)\./) || !1, ff = "undefined" != typeof InstallTrigger, prefix = function(el) {
                for (var i = 0; i < vendorsTrans.length; i++) if (vendorsTrans[i] + "Transition" in el.style) return {
                    prefix: "-" + vendorsTrans[i].toLowerCase() + "-",
                    vendor: vendorsTrans[i]
                };
                return "transition" in el.style && "";
            }, transPrefix = prefix(self._domNode);
            self._execAction("_platformDetect", 0), self._chrome = !!chrome && parseInt(chrome[1], 10), 
            self._ff = !!ff && parseInt(window.navigator.userAgent.match(/rv:([^)]+)\)/)[1]), 
            self._prefix = transPrefix.prefix, self._vendor = transPrefix.vendor, self._suckMode = !window.atob || !self._prefix, 
            self._suckMode && (self.animation.enable = !1), self._ff && self._ff <= 4 && (self.animation.enable = !1);
            for (var x = 0; x < vendorsRAF.length && !window.requestAnimationFrame; x++) window.requestAnimationFrame = window[vendorsRAF[x] + "RequestAnimationFrame"];
            "function" != typeof Object.getPrototypeOf && ("object" == typeof "test".__proto__ ? Object.getPrototypeOf = function(object) {
                return object.__proto__;
            } : Object.getPrototypeOf = function(object) {
                return object.constructor.prototype;
            }), self._domNode.nextElementSibling === undf && Object.defineProperty(Element.prototype, "nextElementSibling", {
                get: function() {
                    for (var el = this.nextSibling; el; ) {
                        if (1 === el.nodeType) return el;
                        el = el.nextSibling;
                    }
                    return null;
                }
            }), self._execAction("_platformDetect", 1);
        },
        _refresh: function(init, force) {
            var self = this;
            self._execAction("_refresh", 0, arguments), self._$targets = self._$container.find(self.selectors.target);
            for (var i = 0; i < self._$targets.length; i++) {
                var target = self._$targets[i];
                if (target.dataset === undf || force) {
                    target.dataset = {};
                    for (var j = 0; j < target.attributes.length; j++) {
                        var attr = target.attributes[j], name = attr.name, val = attr.value;
                        if (name.indexOf("data-") > -1) {
                            var dataName = self._helpers._camelCase(name.substring(5, name.length));
                            target.dataset[dataName] = val;
                        }
                    }
                }
                target.mixParent === undf && (target.mixParent = self._id);
            }
            if (self._$targets.length && init || !self._origOrder.length && self._$targets.length) {
                self._origOrder = [];
                for (var i = 0; i < self._$targets.length; i++) {
                    var target = self._$targets[i];
                    self._origOrder.push(target);
                }
            }
            self._execAction("_refresh", 1, arguments);
        },
        _bindHandlers: function() {
            var self = this, filters = $.MixItUp.prototype._bound._filter, sorts = $.MixItUp.prototype._bound._sort;
            self._execAction("_bindHandlers", 0), self.controls.live ? self._$body.on("click.mixItUp." + self._id, self.selectors.sort, function() {
                self._processClick($(this), "sort");
            }).on("click.mixItUp." + self._id, self.selectors.filter, function() {
                self._processClick($(this), "filter");
            }) : (self._$sortButtons = $(self.selectors.sort), self._$filterButtons = $(self.selectors.filter), 
            self._$sortButtons.on("click.mixItUp." + self._id, function() {
                self._processClick($(this), "sort");
            }), self._$filterButtons.on("click.mixItUp." + self._id, function() {
                self._processClick($(this), "filter");
            })), filters[self.selectors.filter] = filters[self.selectors.filter] === undf ? 1 : filters[self.selectors.filter] + 1, 
            sorts[self.selectors.sort] = sorts[self.selectors.sort] === undf ? 1 : sorts[self.selectors.sort] + 1, 
            self._execAction("_bindHandlers", 1);
        },
        _processClick: function($button, type) {
            var self = this, trackClick = function($button, type, off) {
                var proto = $.MixItUp.prototype;
                proto._handled["_" + type][self.selectors[type]] = proto._handled["_" + type][self.selectors[type]] === undf ? 1 : proto._handled["_" + type][self.selectors[type]] + 1, 
                proto._handled["_" + type][self.selectors[type]] === proto._bound["_" + type][self.selectors[type]] && ($button[(off ? "remove" : "add") + "Class"](self.controls.activeClass), 
                delete proto._handled["_" + type][self.selectors[type]]);
            };
            if (self._execAction("_processClick", 0, arguments), !self._mixing || self.animation.queue && self._queue.length < self.animation.queueLimit) {
                if (self._clicking = !0, "sort" === type) {
                    var sort = $button.attr("data-sort");
                    (!$button.hasClass(self.controls.activeClass) || sort.indexOf("random") > -1) && ($(self.selectors.sort).removeClass(self.controls.activeClass), 
                    trackClick($button, type), self.sort(sort));
                }
                if ("filter" === type) {
                    var ndx, filter = $button.attr("data-filter"), seperator = "or" === self.controls.toggleLogic ? "," : "";
                    self.controls.toggleFilterButtons ? (self._buildToggleArray(), $button.hasClass(self.controls.activeClass) ? (trackClick($button, type, !0), 
                    ndx = self._toggleArray.indexOf(filter), self._toggleArray.splice(ndx, 1)) : (trackClick($button, type), 
                    self._toggleArray.push(filter)), self._toggleArray = $.grep(self._toggleArray, function(n) {
                        return n;
                    }), self._toggleString = self._toggleArray.join(seperator), self.filter(self._toggleString)) : $button.hasClass(self.controls.activeClass) || ($(self.selectors.filter).removeClass(self.controls.activeClass), 
                    trackClick($button, type), self.filter(filter));
                }
                self._execAction("_processClick", 1, arguments);
            } else "function" == typeof self.callbacks.onMixBusy && self.callbacks.onMixBusy.call(self._domNode, self._state, self), 
            self._execAction("_processClickBusy", 1, arguments);
        },
        _buildToggleArray: function() {
            var self = this, activeFilter = self._activeFilter.replace(/\s/g, "");
            if (self._execAction("_buildToggleArray", 0, arguments), "or" === self.controls.toggleLogic) self._toggleArray = activeFilter.split(","); else {
                self._toggleArray = activeFilter.split("."), !self._toggleArray[0] && self._toggleArray.shift();
                for (var filter, i = 0; filter = self._toggleArray[i]; i++) self._toggleArray[i] = "." + filter;
            }
            self._execAction("_buildToggleArray", 1, arguments);
        },
        _updateControls: function(command, multi) {
            var self = this, output = {
                filter: command.filter,
                sort: command.sort
            }, update = function($el, filter) {
                try {
                    multi && "filter" === type && "none" !== output.filter && "" !== output.filter ? $el.filter(filter).addClass(self.controls.activeClass) : $el.removeClass(self.controls.activeClass).filter(filter).addClass(self.controls.activeClass);
                } catch (e) {}
            }, type = "filter", $el = null;
            self._execAction("_updateControls", 0, arguments), command.filter === undf && (output.filter = self._activeFilter), 
            command.sort === undf && (output.sort = self._activeSort), output.filter === self.selectors.target && (output.filter = "all");
            for (var i = 0; i < 2; i++) $el = self.controls.live ? $(self.selectors[type]) : self["_$" + type + "Buttons"], 
            $el && update($el, "[data-" + type + '="' + output[type] + '"]'), type = "sort";
            self._execAction("_updateControls", 1, arguments);
        },
        _filter: function() {
            var self = this;
            self._execAction("_filter", 0);
            for (var i = 0; i < self._$targets.length; i++) {
                var $target = $(self._$targets[i]);
                $target.is(self._activeFilter) ? self._$show = self._$show.add($target) : self._$hide = self._$hide.add($target);
            }
            self._execAction("_filter", 1);
        },
        _sort: function() {
            var self = this, arrayShuffle = function(oldArray) {
                for (var newArray = oldArray.slice(), len = newArray.length, i = len; i--; ) {
                    var p = parseInt(Math.random() * len), t = newArray[i];
                    newArray[i] = newArray[p], newArray[p] = t;
                }
                return newArray;
            };
            self._execAction("_sort", 0), self._startOrder = [];
            for (var i = 0; i < self._$targets.length; i++) {
                var target = self._$targets[i];
                self._startOrder.push(target);
            }
            switch (self._newSort[0].sortBy) {
              case "default":
                self._newOrder = self._origOrder;
                break;

              case "random":
                self._newOrder = arrayShuffle(self._startOrder);
                break;

              case "custom":
                self._newOrder = self._newSort[0].order;
                break;

              default:
                self._newOrder = self._startOrder.concat().sort(function(a, b) {
                    return self._compare(a, b);
                });
            }
            self._execAction("_sort", 1);
        },
        _compare: function(a, b, depth) {
            depth = depth ? depth : 0;
            var self = this, order = self._newSort[depth].order, getData = function(el) {
                return el.dataset[self._newSort[depth].sortBy] || 0;
            }, attrA = isNaN(1 * getData(a)) ? getData(a).toLowerCase() : 1 * getData(a), attrB = isNaN(1 * getData(b)) ? getData(b).toLowerCase() : 1 * getData(b);
            return attrA < attrB ? "asc" === order ? -1 : 1 : attrA > attrB ? "asc" === order ? 1 : -1 : attrA === attrB && self._newSort.length > depth + 1 ? self._compare(a, b, depth + 1) : 0;
        },
        _printSort: function(reset) {
            var self = this, order = reset ? self._startOrder : self._newOrder, targets = self._$parent[0].querySelectorAll(self.selectors.target), nextSibling = targets.length ? targets[targets.length - 1].nextElementSibling : null, frag = document.createDocumentFragment();
            self._execAction("_printSort", 0, arguments);
            for (var i = 0; i < targets.length; i++) {
                var target = targets[i], whiteSpace = target.nextSibling;
                "absolute" !== target.style.position && (whiteSpace && "#text" === whiteSpace.nodeName && self._$parent[0].removeChild(whiteSpace), 
                self._$parent[0].removeChild(target));
            }
            for (var i = 0; i < order.length; i++) {
                var el = order[i];
                if ("default" !== self._newSort[0].sortBy || "desc" !== self._newSort[0].order || reset) frag.appendChild(el), 
                frag.appendChild(document.createTextNode(" ")); else {
                    var firstChild = frag.firstChild;
                    frag.insertBefore(el, firstChild), frag.insertBefore(document.createTextNode(" "), el);
                }
            }
            nextSibling ? self._$parent[0].insertBefore(frag, nextSibling) : self._$parent[0].appendChild(frag), 
            self._execAction("_printSort", 1, arguments);
        },
        _parseSort: function(sortString) {
            for (var self = this, rules = "string" == typeof sortString ? sortString.split(" ") : [ sortString ], newSort = [], i = 0; i < rules.length; i++) {
                var rule = "string" == typeof sortString ? rules[i].split(":") : [ "custom", rules[i] ], ruleObj = {
                    sortBy: self._helpers._camelCase(rule[0]),
                    order: rule[1] || "asc"
                };
                if (newSort.push(ruleObj), "default" === ruleObj.sortBy || "random" === ruleObj.sortBy) break;
            }
            return self._execFilter("_parseSort", newSort, arguments);
        },
        _parseEffects: function() {
            var self = this, effects = {
                opacity: "",
                transformIn: "",
                transformOut: "",
                filter: ""
            }, parse = function(effect, extract, reverse) {
                if (self.animation.effects.indexOf(effect) > -1) {
                    if (extract) {
                        var propIndex = self.animation.effects.indexOf(effect + "(");
                        if (propIndex > -1) {
                            var str = self.animation.effects.substring(propIndex), match = /\(([^)]+)\)/.exec(str), val = match[1];
                            return {
                                val: val
                            };
                        }
                    }
                    return !0;
                }
                return !1;
            }, negate = function(value, invert) {
                return invert ? "-" === value.charAt(0) ? value.substr(1, value.length) : "-" + value : value;
            }, buildTransform = function(key, invert) {
                for (var transforms = [ [ "scale", ".01" ], [ "translateX", "20px" ], [ "translateY", "20px" ], [ "translateZ", "20px" ], [ "rotateX", "90deg" ], [ "rotateY", "90deg" ], [ "rotateZ", "180deg" ] ], i = 0; i < transforms.length; i++) {
                    var prop = transforms[i][0], def = transforms[i][1], inverted = invert && "scale" !== prop;
                    effects[key] += parse(prop) ? prop + "(" + negate(parse(prop, !0).val || def, inverted) + ") " : "";
                }
            };
            return effects.opacity = parse("fade") ? parse("fade", !0).val || "0" : "1", buildTransform("transformIn"), 
            self.animation.reverseOut ? buildTransform("transformOut", !0) : effects.transformOut = effects.transformIn, 
            effects.transition = {}, effects.transition = self._getPrefixedCSS("transition", "all " + self.animation.duration + "ms " + self.animation.easing + ", opacity " + self.animation.duration + "ms linear"), 
            self.animation.stagger = !!parse("stagger"), self.animation.staggerDuration = parseInt(parse("stagger") && parse("stagger", !0).val ? parse("stagger", !0).val : 100), 
            self._execFilter("_parseEffects", effects);
        },
        _buildState: function(future) {
            var self = this, state = {};
            return self._execAction("_buildState", 0), state = {
                activeFilter: "" === self._activeFilter ? "none" : self._activeFilter,
                activeSort: future && self._newSortString ? self._newSortString : self._activeSort,
                fail: !self._$show.length && "" !== self._activeFilter,
                $targets: self._$targets,
                $show: self._$show,
                $hide: self._$hide,
                totalTargets: self._$targets.length,
                totalShow: self._$show.length,
                totalHide: self._$hide.length,
                display: future && self._newDisplay ? self._newDisplay : self.layout.display
            }, future ? self._execFilter("_buildState", state) : (self._state = state, void self._execAction("_buildState", 1));
        },
        _goMix: function(animate) {
            var self = this, phase1 = function() {
                self._chrome && 31 === self._chrome && chromeFix(self._$parent[0]), self._setInter(), 
                phase2();
            }, phase2 = function() {
                var scrollTop = window.pageYOffset, scrollLeft = window.pageXOffset;
                document.documentElement.scrollHeight;
                self._getInterMixData(), self._setFinal(), self._getFinalMixData(), window.pageYOffset !== scrollTop && window.scrollTo(scrollLeft, scrollTop), 
                self._prepTargets(), window.requestAnimationFrame ? requestAnimationFrame(phase3) : setTimeout(function() {
                    phase3();
                }, 20);
            }, phase3 = function() {
                self._animateTargets(), 0 === self._targetsBound && self._cleanUp();
            }, chromeFix = function(grid) {
                var parent = grid.parentElement, placeholder = document.createElement("div"), frag = document.createDocumentFragment();
                parent.insertBefore(placeholder, grid), frag.appendChild(grid), parent.replaceChild(grid, placeholder);
            }, futureState = self._buildState(!0);
            self._execAction("_goMix", 0, arguments), !self.animation.duration && (animate = !1), 
            self._mixing = !0, self._$container.removeClass(self.layout.containerClassFail), 
            "function" == typeof self.callbacks.onMixStart && self.callbacks.onMixStart.call(self._domNode, self._state, futureState, self), 
            self._$container.trigger("mixStart", [ self._state, futureState, self ]), self._getOrigMixData(), 
            animate && !self._suckMode ? window.requestAnimationFrame ? requestAnimationFrame(phase1) : phase1() : self._cleanUp(), 
            self._execAction("_goMix", 1, arguments);
        },
        _getTargetData: function(el, stage) {
            var elStyle, self = this;
            el.dataset[stage + "PosX"] = el.offsetLeft, el.dataset[stage + "PosY"] = el.offsetTop, 
            self.animation.animateResizeTargets && (elStyle = self._suckMode ? {
                marginBottom: "",
                marginRight: ""
            } : window.getComputedStyle(el), el.dataset[stage + "MarginBottom"] = parseInt(elStyle.marginBottom), 
            el.dataset[stage + "MarginRight"] = parseInt(elStyle.marginRight), el.dataset[stage + "Width"] = el.offsetWidth, 
            el.dataset[stage + "Height"] = el.offsetHeight);
        },
        _getOrigMixData: function() {
            var self = this, parentStyle = self._suckMode ? {
                boxSizing: ""
            } : window.getComputedStyle(self._$parent[0]), parentBS = parentStyle.boxSizing || parentStyle[self._vendor + "BoxSizing"];
            self._incPadding = "border-box" === parentBS, self._execAction("_getOrigMixData", 0), 
            !self._suckMode && (self.effects = self._parseEffects()), self._$toHide = self._$hide.filter(":visible"), 
            self._$toShow = self._$show.filter(":hidden"), self._$pre = self._$targets.filter(":visible"), 
            self._startHeight = self._incPadding ? self._$parent.outerHeight() : self._$parent.height();
            for (var i = 0; i < self._$pre.length; i++) {
                var el = self._$pre[i];
                self._getTargetData(el, "orig");
            }
            self._execAction("_getOrigMixData", 1);
        },
        _setInter: function() {
            var self = this;
            self._execAction("_setInter", 0), self._changingLayout && self.animation.animateChangeLayout ? (self._$toShow.css("display", self._newDisplay), 
            self._changingClass && self._$container.removeClass(self.layout.containerClass).addClass(self._newClass)) : self._$toShow.css("display", self.layout.display), 
            self._execAction("_setInter", 1);
        },
        _getInterMixData: function() {
            var self = this;
            self._execAction("_getInterMixData", 0);
            for (var i = 0; i < self._$toShow.length; i++) {
                var el = self._$toShow[i];
                self._getTargetData(el, "inter");
            }
            for (var i = 0; i < self._$pre.length; i++) {
                var el = self._$pre[i];
                self._getTargetData(el, "inter");
            }
            self._execAction("_getInterMixData", 1);
        },
        _setFinal: function() {
            var self = this;
            self._execAction("_setFinal", 0), self._sorting && self._printSort(), self._$toHide.removeStyle("display"), 
            self._changingLayout && self.animation.animateChangeLayout && self._$pre.css("display", self._newDisplay), 
            self._execAction("_setFinal", 1);
        },
        _getFinalMixData: function() {
            var self = this;
            self._execAction("_getFinalMixData", 0);
            for (var i = 0; i < self._$toShow.length; i++) {
                var el = self._$toShow[i];
                self._getTargetData(el, "final");
            }
            for (var i = 0; i < self._$pre.length; i++) {
                var el = self._$pre[i];
                self._getTargetData(el, "final");
            }
            self._newHeight = self._incPadding ? self._$parent.outerHeight() : self._$parent.height(), 
            self._sorting && self._printSort(!0), self._$toShow.removeStyle("display"), self._$pre.css("display", self.layout.display), 
            self._changingClass && self.animation.animateChangeLayout && self._$container.removeClass(self._newClass).addClass(self.layout.containerClass), 
            self._execAction("_getFinalMixData", 1);
        },
        _prepTargets: function() {
            var self = this, transformCSS = {
                _in: self._getPrefixedCSS("transform", self.effects.transformIn),
                _out: self._getPrefixedCSS("transform", self.effects.transformOut)
            };
            self._execAction("_prepTargets", 0), self.animation.animateResizeContainer && self._$parent.css("height", self._startHeight + "px");
            for (var i = 0; i < self._$toShow.length; i++) {
                var el = self._$toShow[i], $el = $(el);
                el.style.opacity = self.effects.opacity, el.style.display = self._changingLayout && self.animation.animateChangeLayout ? self._newDisplay : self.layout.display, 
                $el.css(transformCSS._in), self.animation.animateResizeTargets && (el.style.width = el.dataset.finalWidth + "px", 
                el.style.height = el.dataset.finalHeight + "px", el.style.marginRight = -(el.dataset.finalWidth - el.dataset.interWidth) + 1 * el.dataset.finalMarginRight + "px", 
                el.style.marginBottom = -(el.dataset.finalHeight - el.dataset.interHeight) + 1 * el.dataset.finalMarginBottom + "px");
            }
            for (var i = 0; i < self._$pre.length; i++) {
                var el = self._$pre[i], $el = $(el), translate = {
                    x: el.dataset.origPosX - el.dataset.interPosX,
                    y: el.dataset.origPosY - el.dataset.interPosY
                }, transformCSS = self._getPrefixedCSS("transform", "translate(" + translate.x + "px," + translate.y + "px)");
                $el.css(transformCSS), self.animation.animateResizeTargets && (el.style.width = el.dataset.origWidth + "px", 
                el.style.height = el.dataset.origHeight + "px", el.dataset.origWidth - el.dataset.finalWidth && (el.style.marginRight = -(el.dataset.origWidth - el.dataset.interWidth) + 1 * el.dataset.origMarginRight + "px"), 
                el.dataset.origHeight - el.dataset.finalHeight && (el.style.marginBottom = -(el.dataset.origHeight - el.dataset.interHeight) + 1 * el.dataset.origMarginBottom + "px"));
            }
            self._execAction("_prepTargets", 1);
        },
        _animateTargets: function() {
            var self = this;
            self._execAction("_animateTargets", 0), self._targetsDone = 0, self._targetsBound = 0, 
            self._$parent.css(self._getPrefixedCSS("perspective", self.animation.perspectiveDistance + "px")).css(self._getPrefixedCSS("perspective-origin", self.animation.perspectiveOrigin)), 
            self.animation.animateResizeContainer && self._$parent.css(self._getPrefixedCSS("transition", "height " + self.animation.duration + "ms ease")).css("height", self._newHeight + "px");
            for (var i = 0; i < self._$toShow.length; i++) {
                var el = self._$toShow[i], $el = $(el), translate = {
                    x: el.dataset.finalPosX - el.dataset.interPosX,
                    y: el.dataset.finalPosY - el.dataset.interPosY
                }, delay = self._getDelay(i), toShowCSS = {};
                el.style.opacity = "";
                for (var j = 0; j < 2; j++) {
                    var a = 0 === j ? a = self._prefix : "";
                    self._ff && self._ff <= 20 && (toShowCSS[a + "transition-property"] = "all", toShowCSS[a + "transition-timing-function"] = self.animation.easing + "ms", 
                    toShowCSS[a + "transition-duration"] = self.animation.duration + "ms"), toShowCSS[a + "transition-delay"] = delay + "ms", 
                    toShowCSS[a + "transform"] = "translate(" + translate.x + "px," + translate.y + "px)";
                }
                (self.effects.transform || self.effects.opacity) && self._bindTargetDone($el), self._ff && self._ff <= 20 ? $el.css(toShowCSS) : $el.css(self.effects.transition).css(toShowCSS);
            }
            for (var i = 0; i < self._$pre.length; i++) {
                var el = self._$pre[i], $el = $(el), translate = {
                    x: el.dataset.finalPosX - el.dataset.interPosX,
                    y: el.dataset.finalPosY - el.dataset.interPosY
                }, delay = self._getDelay(i);
                el.dataset.finalPosX === el.dataset.origPosX && el.dataset.finalPosY === el.dataset.origPosY || self._bindTargetDone($el), 
                $el.css(self._getPrefixedCSS("transition", "all " + self.animation.duration + "ms " + self.animation.easing + " " + delay + "ms")), 
                $el.css(self._getPrefixedCSS("transform", "translate(" + translate.x + "px," + translate.y + "px)")), 
                self.animation.animateResizeTargets && (el.dataset.origWidth - el.dataset.finalWidth && 1 * el.dataset.finalWidth && (el.style.width = el.dataset.finalWidth + "px", 
                el.style.marginRight = -(el.dataset.finalWidth - el.dataset.interWidth) + 1 * el.dataset.finalMarginRight + "px"), 
                el.dataset.origHeight - el.dataset.finalHeight && 1 * el.dataset.finalHeight && (el.style.height = el.dataset.finalHeight + "px", 
                el.style.marginBottom = -(el.dataset.finalHeight - el.dataset.interHeight) + 1 * el.dataset.finalMarginBottom + "px"));
            }
            self._changingClass && self._$container.removeClass(self.layout.containerClass).addClass(self._newClass);
            for (var i = 0; i < self._$toHide.length; i++) {
                for (var el = self._$toHide[i], $el = $(el), delay = self._getDelay(i), toHideCSS = {}, j = 0; j < 2; j++) {
                    var a = 0 === j ? a = self._prefix : "";
                    toHideCSS[a + "transition-delay"] = delay + "ms", toHideCSS[a + "transform"] = self.effects.transformOut, 
                    toHideCSS.opacity = self.effects.opacity;
                }
                $el.css(self.effects.transition).css(toHideCSS), (self.effects.transform || self.effects.opacity) && self._bindTargetDone($el);
            }
            self._execAction("_animateTargets", 1);
        },
        _bindTargetDone: function($el) {
            var self = this, el = $el[0];
            self._execAction("_bindTargetDone", 0, arguments), el.dataset.bound || (el.dataset.bound = !0, 
            self._targetsBound++, $el.on("webkitTransitionEnd.mixItUp transitionend.mixItUp", function(e) {
                (e.originalEvent.propertyName.indexOf("transform") > -1 || e.originalEvent.propertyName.indexOf("opacity") > -1) && $(e.originalEvent.target).is(self.selectors.target) && ($el.off(".mixItUp"), 
                delete el.dataset.bound, self._targetDone());
            })), self._execAction("_bindTargetDone", 1, arguments);
        },
        _targetDone: function() {
            var self = this;
            self._execAction("_targetDone", 0), self._targetsDone++, self._targetsDone === self._targetsBound && self._cleanUp(), 
            self._execAction("_targetDone", 1);
        },
        _cleanUp: function() {
            var self = this, targetStyles = self.animation.animateResizeTargets ? "transform opacity width height margin-bottom margin-right" : "transform opacity";
            unBrake = function() {
                self._$targets.removeStyle("transition", self._prefix);
            }, self._execAction("_cleanUp", 0), self._changingLayout ? self._$show.css("display", self._newDisplay) : self._$show.css("display", self.layout.display), 
            self._$targets.css(self._brake), self._$targets.removeStyle(targetStyles, self._prefix).removeAttr("data-inter-pos-x data-inter-pos-y data-final-pos-x data-final-pos-y data-orig-pos-x data-orig-pos-y data-orig-height data-orig-width data-final-height data-final-width data-inter-width data-inter-height data-orig-margin-right data-orig-margin-bottom data-inter-margin-right data-inter-margin-bottom data-final-margin-right data-final-margin-bottom"), 
            self._$hide.removeStyle("display"), self._$parent.removeStyle("height transition perspective-distance perspective perspective-origin-x perspective-origin-y perspective-origin perspectiveOrigin", self._prefix), 
            self._sorting && (self._printSort(), self._activeSort = self._newSortString, self._sorting = !1), 
            self._changingLayout && (self._changingDisplay && (self.layout.display = self._newDisplay, 
            self._changingDisplay = !1), self._changingClass && (self._$parent.removeClass(self.layout.containerClass).addClass(self._newClass), 
            self.layout.containerClass = self._newClass, self._changingClass = !1), self._changingLayout = !1), 
            self._refresh(), self._buildState(), self._state.fail && self._$container.addClass(self.layout.containerClassFail), 
            self._$show = $(), self._$hide = $(), window.requestAnimationFrame && requestAnimationFrame(unBrake), 
            self._mixing = !1, "function" == typeof self.callbacks._user && self.callbacks._user.call(self._domNode, self._state, self), 
            "function" == typeof self.callbacks.onMixEnd && self.callbacks.onMixEnd.call(self._domNode, self._state, self), 
            self._$container.trigger("mixEnd", [ self._state, self ]), self._state.fail && ("function" == typeof self.callbacks.onMixFail && self.callbacks.onMixFail.call(self._domNode, self._state, self), 
            self._$container.trigger("mixFail", [ self._state, self ])), self._loading && ("function" == typeof self.callbacks.onMixLoad && self.callbacks.onMixLoad.call(self._domNode, self._state, self), 
            self._$container.trigger("mixLoad", [ self._state, self ])), self._queue.length && (self._execAction("_queue", 0), 
            self.multiMix(self._queue[0][0], self._queue[0][1], self._queue[0][2]), self._queue.splice(0, 1)), 
            self._execAction("_cleanUp", 1), self._loading = !1;
        },
        _getPrefixedCSS: function(property, value, prefixValue) {
            var self = this, styles = {};
            for (i = 0; i < 2; i++) {
                var prefix = 0 === i ? self._prefix : "";
                prefixValue ? styles[prefix + property] = prefix + value : styles[prefix + property] = value;
            }
            return self._execFilter("_getPrefixedCSS", styles, arguments);
        },
        _getDelay: function(i) {
            var self = this, n = "function" == typeof self.animation.staggerSequence ? self.animation.staggerSequence.call(self._domNode, i, self._state) : i, delay = self.animation.stagger ? n * self.animation.staggerDuration : 0;
            return self._execFilter("_getDelay", delay, arguments);
        },
        _parseMultiMixArgs: function(args) {
            for (var self = this, output = {
                command: null,
                animate: self.animation.enable,
                callback: null
            }, i = 0; i < args.length; i++) {
                var arg = args[i];
                null !== arg && ("object" == typeof arg || "string" == typeof arg ? output.command = arg : "boolean" == typeof arg ? output.animate = arg : "function" == typeof arg && (output.callback = arg));
            }
            return self._execFilter("_parseMultiMixArgs", output, arguments);
        },
        _parseInsertArgs: function(args) {
            for (var self = this, output = {
                index: 0,
                $object: $(),
                multiMix: {
                    filter: self._state.activeFilter
                },
                callback: null
            }, i = 0; i < args.length; i++) {
                var arg = args[i];
                "number" == typeof arg ? output.index = arg : "object" == typeof arg && arg instanceof $ ? output.$object = arg : "object" == typeof arg && self._helpers._isElement(arg) ? output.$object = $(arg) : "object" == typeof arg && null !== arg ? output.multiMix = arg : "boolean" != typeof arg || arg ? "function" == typeof arg && (output.callback = arg) : output.multiMix = !1;
            }
            return self._execFilter("_parseInsertArgs", output, arguments);
        },
        _execAction: function(methodName, isPost, args) {
            var self = this, context = isPost ? "post" : "pre";
            if (!self._actions.isEmptyObject && self._actions.hasOwnProperty(methodName)) for (var key in self._actions[methodName][context]) self._actions[methodName][context][key].call(self, args);
        },
        _execFilter: function(methodName, value, args) {
            var self = this;
            if (self._filters.isEmptyObject || !self._filters.hasOwnProperty(methodName)) return value;
            for (var key in self._filters[methodName]) return self._filters[methodName][key].call(self, args);
        },
        _helpers: {
            _camelCase: function(string) {
                return string.replace(/-([a-z])/g, function(g) {
                    return g[1].toUpperCase();
                });
            },
            _isElement: function(el) {
                return window.HTMLElement ? el instanceof HTMLElement : null !== el && 1 === el.nodeType && "string" === el.nodeName;
            }
        },
        isMixing: function() {
            var self = this;
            return self._execFilter("isMixing", self._mixing);
        },
        filter: function() {
            var self = this, args = self._parseMultiMixArgs(arguments);
            self._clicking && (self._toggleString = ""), self.multiMix({
                filter: args.command
            }, args.animate, args.callback);
        },
        sort: function() {
            var self = this, args = self._parseMultiMixArgs(arguments);
            self.multiMix({
                sort: args.command
            }, args.animate, args.callback);
        },
        changeLayout: function() {
            var self = this, args = self._parseMultiMixArgs(arguments);
            self.multiMix({
                changeLayout: args.command
            }, args.animate, args.callback);
        },
        multiMix: function() {
            var self = this, args = self._parseMultiMixArgs(arguments);
            if (self._execAction("multiMix", 0, arguments), self._mixing) self.animation.queue && self._queue.length < self.animation.queueLimit ? (self._queue.push(arguments), 
            self.controls.enable && !self._clicking && self._updateControls(args.command), self._execAction("multiMixQueue", 1, arguments)) : ("function" == typeof self.callbacks.onMixBusy && self.callbacks.onMixBusy.call(self._domNode, self._state, self), 
            self._$container.trigger("mixBusy", [ self._state, self ]), self._execAction("multiMixBusy", 1, arguments)); else {
                self.controls.enable && !self._clicking && (self.controls.toggleFilterButtons && self._buildToggleArray(), 
                self._updateControls(args.command, self.controls.toggleFilterButtons)), self._queue.length < 2 && (self._clicking = !1), 
                delete self.callbacks._user, args.callback && (self.callbacks._user = args.callback);
                var sort = args.command.sort, filter = args.command.filter, changeLayout = args.command.changeLayout;
                self._refresh(), sort && (self._newSort = self._parseSort(sort), self._newSortString = sort, 
                self._sorting = !0, self._sort()), filter !== undf && (filter = "all" === filter ? self.selectors.target : filter, 
                self._activeFilter = filter), self._filter(), changeLayout && (self._newDisplay = "string" == typeof changeLayout ? changeLayout : changeLayout.display || self.layout.display, 
                self._newClass = changeLayout.containerClass || "", self._newDisplay === self.layout.display && self._newClass === self.layout.containerClass || (self._changingLayout = !0, 
                self._changingClass = self._newClass !== self.layout.containerClass, self._changingDisplay = self._newDisplay !== self.layout.display)), 
                self._$targets.css(self._brake), self._goMix(args.animate ^ self.animation.enable ? args.animate : self.animation.enable), 
                self._execAction("multiMix", 1, arguments);
            }
        },
        insert: function() {
            var self = this, args = self._parseInsertArgs(arguments), callback = "function" == typeof args.callback ? args.callback : null, frag = document.createDocumentFragment(), target = function() {
                return self._refresh(), self._$targets.length ? args.index < self._$targets.length || !self._$targets.length ? self._$targets[args.index] : self._$targets[self._$targets.length - 1].nextElementSibling : self._$parent[0].children[0];
            }();
            if (self._execAction("insert", 0, arguments), args.$object) {
                for (var i = 0; i < args.$object.length; i++) {
                    var el = args.$object[i];
                    frag.appendChild(el), frag.appendChild(document.createTextNode(" "));
                }
                self._$parent[0].insertBefore(frag, target);
            }
            self._execAction("insert", 1, arguments), "object" == typeof args.multiMix && self.multiMix(args.multiMix, callback);
        },
        prepend: function() {
            var self = this, args = self._parseInsertArgs(arguments);
            self.insert(0, args.$object, args.multiMix, args.callback);
        },
        append: function() {
            var self = this, args = self._parseInsertArgs(arguments);
            self.insert(self._state.totalTargets, args.$object, args.multiMix, args.callback);
        },
        getOption: function(string) {
            var self = this, getProperty = function(obj, prop) {
                for (var parts = prop.split("."), last = parts.pop(), l = parts.length, i = 1, current = parts[0] || prop; (obj = obj[current]) && i < l; ) current = parts[i], 
                i++;
                if (obj !== undf) return obj[last] !== undf ? obj[last] : obj;
            };
            return string ? self._execFilter("getOption", getProperty(self, string), arguments) : self;
        },
        setOptions: function(config) {
            var self = this;
            self._execAction("setOptions", 0, arguments), "object" == typeof config && $.extend(!0, self, config), 
            self._execAction("setOptions", 1, arguments);
        },
        getState: function() {
            var self = this;
            return self._execFilter("getState", self._state, self);
        },
        forceRefresh: function() {
            var self = this;
            self._refresh(!1, !0);
        },
        destroy: function(hideAll) {
            var self = this, filters = $.MixItUp.prototype._bound._filter, sorts = $.MixItUp.prototype._bound._sort;
            self._execAction("destroy", 0, arguments), self._$body.add($(self.selectors.sort)).add($(self.selectors.filter)).off(".mixItUp");
            for (var i = 0; i < self._$targets.length; i++) {
                var target = self._$targets[i];
                hideAll && (target.style.display = ""), delete target.mixParent;
            }
            self._execAction("destroy", 1, arguments), filters[self.selectors.filter] && filters[self.selectors.filter] > 1 ? filters[self.selectors.filter]-- : 1 === filters[self.selectors.filter] && delete filters[self.selectors.filter], 
            sorts[self.selectors.sort] && sorts[self.selectors.sort] > 1 ? sorts[self.selectors.sort]-- : 1 === sorts[self.selectors.sort] && delete sorts[self.selectors.sort], 
            delete $.MixItUp.prototype._instances[self._id];
        }
    }, $.fn.mixItUp = function() {
        var eachReturn, args = arguments, dataReturn = [], _instantiate = function(domNode, settings) {
            var instance = new $.MixItUp(), rand = function() {
                return ("00000" + (16777216 * Math.random() << 0).toString(16)).substr(-6).toUpperCase();
            };
            instance._execAction("_instantiate", 0, arguments), domNode.id = domNode.id ? domNode.id : "MixItUp" + rand(), 
            instance._instances[domNode.id] || (instance._instances[domNode.id] = instance, 
            instance._init(domNode, settings)), instance._execAction("_instantiate", 1, arguments);
        };
        return eachReturn = this.each(function() {
            if (args && "string" == typeof args[0]) {
                var instance = $.MixItUp.prototype._instances[this.id];
                if ("isLoaded" === args[0]) dataReturn.push(!!instance); else {
                    var data = instance[args[0]](args[1], args[2], args[3]);
                    data !== undf && dataReturn.push(data);
                }
            } else _instantiate(this, args[0]);
        }), dataReturn.length ? dataReturn.length > 1 ? dataReturn : dataReturn[0] : eachReturn;
    }, $.fn.removeStyle = function(style, prefix) {
        return prefix = prefix ? prefix : "", this.each(function() {
            for (var el = this, styles = style.split(" "), i = 0; i < styles.length; i++) for (var j = 0; j < 4; j++) {
                switch (j) {
                  case 0:
                    var prop = styles[i];
                    break;

                  case 1:
                    var prop = $.MixItUp.prototype._helpers._camelCase(prop);
                    break;

                  case 2:
                    var prop = prefix + styles[i];
                    break;

                  case 3:
                    var prop = $.MixItUp.prototype._helpers._camelCase(prefix + styles[i]);
                }
                if (el.style[prop] !== undf && "unknown" != typeof el.style[prop] && el.style[prop].length > 0 && (el.style[prop] = ""), 
                !prefix && 1 === j) break;
            }
            el.attributes && el.attributes.style && el.attributes.style !== undf && "" === el.attributes.style.value && el.attributes.removeNamedItem("style");
        });
    };
}(jQuery), function($) {
    $.extend({
        scrollToTop: function() {
            var _isScrolling = !1;
            $("body").append($("<a />").addClass("scroll-to-top").attr({
                href: "#",
                id: "scrollToTop"
            }).append($("<i />").addClass("fas fa-angle-up"))), $("#scrollToTop").click(function(e) {
                return e.preventDefault(), $("body, html").animate({
                    scrollTop: 0
                }, 500), !1;
            }), $(window).scroll(function() {
                _isScrolling || (_isScrolling = !0, $(window).scrollTop() > 150 ? ($("#scrollToTop").stop(!0, !0).addClass("visible"), 
                _isScrolling = !1) : ($("#scrollToTop").stop(!0, !0).removeClass("visible"), _isScrolling = !1));
            });
        }
    });
}(jQuery), function() {
    "use strict";
    var Core = {
        initialized: !1,
        initialize: function() {
            this.initialized || (this.initialized = !0, this.build());
        },
        build: function() {
            $.scrollToTop(), this.dropdownhover(), this.flexslider(), this.choosenselect();
        },
        dropdownhover: function(options) {
            $(window).width() > 992 && ($(".pgl-navbar-main .dropdown-toggle").addClass("disabled"), 
            $(".navbar .dropdown").hover(function() {
                $(this).addClass("open").find(".dropdown-menu").first().stop(!0, !0).delay(250).slideDown();
            }, function() {
                var na = $(this);
                na.find(".dropdown-menu").first().stop(!0, !0).delay(100).slideUp("fast", function() {
                    na.removeClass("open");
                });
            }));
        },
        flexslider: function(options) {
            $("#carousel").flexslider({
                animation: "slide",
                controlNav: !1,
                animationLoop: !1,
                slideshow: !1,
                itemWidth: 148,
                itemMargin: 10,
                asNavFor: "#slider"
            }), $("#slider").flexslider({
                animation: "slide",
                controlNav: !1,
                animationLoop: !1,
                directionNav: !1,
                slideshow: !1,
                sync: "#carousel",
                start: function() {
                    var height = $(".slides").height();
                    $(".flexslider-foto-grande li").height(height);
                }
            });
        },
        choosenselect: function(options) {
            var config = {
                ".chosen-select": {},
                ".chosen-select-deselect": {
                    allow_single_deselect: !0
                },
                ".chosen-select-no-single": {
                    disable_search_threshold: 10
                },
                ".chosen-select-no-results": {
                    no_results_text: "Oops, nothing found!"
                },
                ".chosen-select-width": {
                    width: "95%"
                }
            };
            for (var selector in config) $(selector).chosen(config[selector]);
        }
    };
    Core.initialize(), $(window).on('load', function() {});
}(), function() {
    "use strict";
    function count_selected(name) {
        for (var inputs = document.getElementsByName(name), checked = [], i = 0; i < inputs.length; i++) "checkbox" == inputs[i].type && inputs[i].checked && checked.push(inputs[i]);
        var nbChecked = checked.length;
        return {
            countCB: nbChecked,
            checks: checked
        };
    }
    $("#filterOptions li a").on("click", function(e) {
        e.preventDefault();
        var a = $(this).data("filter");
        $(".grid li").fadeOut().promise().done(function() {
            $(".grid li." + a).fadeIn();
        }), $(this).hasClass("all") && $(".grid li").fadeOut().promise().done(function() {
            $(".grid li").fadeIn();
        });
    }), $("#filterOptions li a").hasClass("active") && $(".grid li").fadeIn(), $('[data-toggle="tooltip"]').tooltip(), 
    $(".select_cidade").change(function(e) {
        e.preventDefault();
        var cidade = this.value;
        $.post(ajaxurl, {
            action: "lista_bairro",
            cidade: cidade
        }, function(result) {
            var lista, bairros, bairrocount, template;
            if (document.getElementById("lista-bairros").innerHTML = "", lista = document.getElementById("lista-bairros"), 
            $(lista).parents(".form-group").find(".open-dropdown-busca span").html("Bairro"), 
            "" != cidade) {
                if (bairros = result.Bairro, bairrocount = bairros.length, "undefined" != typeof bairros && bairrocount > 0) for (var i = 0; i <= bairrocount; i++) template = document.createElement("div"), 
                template.className = "col-xs-12", "" != bairros[i] && void 0 != bairros[i] && (0 == i && (template.innerHTML = '<label for="" class="dropdown-search-label"><input type="checkbox" name="" id="" value="" class="dropdown-search-checkbox"> <span>Todos</span></label>'), 
                template.innerHTML = '<label for="bairro' + i + '" class="dropdown-search-label"><input type="checkbox" name="bairro[]" id="bairro' + i + '" value="' + bairros[i] + '" class="dropdown-search-checkbox"/> <span>' + bairros[i] + "</span></label>"), 
                lista.appendChild(template);
            } else template = document.createElement("div"), template.className = "col-xs-12", 
            template.innerHTML = '<label for="" class="dropdown-search-label"><input type="checkbox" name="" id="" value="" class="dropdown-search-checkbox"> <span>Bairro</span></label>', 
            lista.appendChild(template);
        });
    }), $(".mask_fone").length > 0 && $(".mask_fone").mask("(99) 9999-9999?9").ready(function(event) {
        var phone, element;
        element = $(".mask_fone"), element.unmask(), phone = element.val().replace(/\D/g, ""), 
        phone.length > 10 ? element.mask("(99) 99999-999?9") : element.mask("(99) 9999-9999?9");
    }).trigger("focusout"), $(".valores").priceFormat({
        prefix: "R$ ",
        centsSeparator: ",",
        thousandsSeparator: "."
    }), $(".btn-comparar").click(function(e) {
        e.preventDefault();
        var codigo = $(this).attr("data-codigo"), btn = $(this);
        $.post(ajaxurl, {
            action: "add_comparar",
            imovel_id: codigo
        }, function(result) {
            result.data ? ($("#alert-comparar").html(result.data.msg), $("#nun-comparar").html(result.data.qtd), 
            result.data.add ? btn.addClass("active") : result.data.remove && btn.removeClass("active")) : alert("Não foi possível realizar essa operação, tente mais tarde.");
        });
    }), $(".btn-remover-comparar").click(function(e) {
        e.preventDefault();
        var codigo = $(this).attr("data-codigo"), btn = $("#imovel-" + codigo), btn2 = $("#imovell-" + codigo);
        $.post(ajaxurl, {
            action: "remove_comparar",
            imovel_id: codigo
        }, function(result) {
            result.data ? ($("#alert-comparar").html(), $("#nun-comparar").html(result.data.qtd), 
            btn.fadeOut("slow"), btn.remove(), btn2.remove(), 1 == result.data.qtd && location.reload()) : alert("Não foi possível realizar essa operação, tente mais tarde.");
        });
    }), $(".btn-favorito").click(function(e) {
        e.preventDefault();
        
        var animacaotipo = 'animated tada';
    	var animacaofim = 'animationend';
    	
		$(".fav-effect").addClass(animacaotipo).one(animacaofim,function() {
			$(this).removeClass(animacaotipo);
		});
        
        var codigo = $(this).attr("data-codigo"), btn = $(this);
        $.post(ajaxurl, {
            action: "add_favorito",
            imovel_id: codigo
        }, function(result) {
            result.data ? result.data.add ? btn.addClass("active") : result.data.remove && btn.removeClass("active") : alert("Não foi possível realizar essa operação, tente mais tarde.");
        });
    }), $(".btn-remover-favorito").click(function(e) {
        e.preventDefault();
        var codigo = $(this).attr("data-codigo"), btn = $("#imovel-" + codigo);
        $.post(ajaxurl, {
            action: "remove_favorito",
            imovel_id: codigo
        }, function(result) {
            result.data ? (btn.fadeOut("slow"), btn.remove(), 0 == result.data.qtd && location.reload()) : alert("Não foi possível realizar essa operação, tente mais tarde.");
        });
    }), $(".form-send-email").on("submit", function(e) {
        e.preventDefault();
        var id = $(this).attr("id"), formdata = $(this).serializeObject();
        $.ajax({
            type: "post",
            data: {
                formdata: formdata,
                action: formdata.action
            },
            url: ajaxurl,
            success: function(result) {
                alert(result.data.msg), document.getElementById(id).reset(), setTimeout(function() {
                    $(".fancybox-overlay").remove();
                }, 1200);
            }
        });
    }), $(".open-dropdown-busca").click(function(e) {
        e.stopPropagation(), $(this).toggleClass("active"), $(this).next().toggleClass("dropdown-search-open");
    }), $(document).on("click", function() {
        $(".dropdown-search-open").removeClass("dropdown-search-open"), $(".open-dropdown-busca").removeClass("active");
    }), $(document).on("click", ".dropdown-search-open", function(e) {
        console.log("teste"), e.stopPropagation();
    }), $(document).on("change", ".dropdown-search-checkbox", function() {
        var cbs = {}, currentCheck = $(this).attr("name"), local = currentCheck.slice(0, -2), targetLbl = $("#dropdown-" + local + " .open-dropdown-busca"), defaultLbl = targetLbl.data("origin-label"), target = targetLbl.find("span");
        if (cbs = count_selected(currentCheck), 0 === cbs.countCB) target.html(defaultLbl); else if (cbs.countCB > 2) target.html(cbs.countCB + " " + defaultLbl + "s selecionados"); else {
            for (var txts = [], n = 0; n < cbs.countCB; n++) txts.push(cbs.checks[n].value);
            target.html(txts.join(", "));
        }
    });
}();